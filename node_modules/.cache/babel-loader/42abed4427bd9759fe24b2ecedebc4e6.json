{"ast":null,"code":"var _jsxFileName = \"/Users/lebowitz/Desktop/calHackathon/covid/src/components/edit-post.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Chart } from 'react-charts';\nexport default class EditPost extends Component {\n  constructor(props) {\n    super(props); //ensures that the this called in the methods are the same this in the class\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChangeDiagnosis = this.onChangeDiagnosis.bind(this);\n    this.parseJsonToGraphableData = this.parseJsonToGraphableData.bind(this);\n    this.createAxes = this.createAxes.bind(this); //state is how you create vars in react\n\n    this.state = {\n      username: '',\n      description: '',\n      date: new Date(),\n      file: '',\n      positive: false,\n      graphData: [],\n      data: ''\n    };\n  }\n\n  parseJsonToGraphableData(jsonData) {\n    console.log(\"here\");\n    var storage = [];\n\n    for (var i = 0; i < jsonData.length; i++) {\n      var whichLine = 0;\n\n      for (var dataKey of Object.keys(jsonData[i])) {\n        if (i === 0) {\n          storage.push({\n            label: dataKey,\n            data: []\n          });\n        }\n\n        storage[currentLine].data.push([i, parseFloat(jsonData[i].dataKey)]);\n        currentLine++;\n      }\n    }\n\n    return storage;\n  }\n\n  createAxes() {\n    return [{\n      primary: true,\n      type: 'linear',\n      position: 'bottom'\n    }, {\n      type: 'linear',\n      position: 'left'\n    }];\n  }\n\n  componentDidMount() {\n    console.log(this.props.match.params.id);\n    axios.get('http://localhost:5000/posts/' + this.props.match.params.id).then(response => {\n      console.log(response.data);\n      this.setState({\n        username: response.data.username,\n        description: response.data.description,\n        date: new Date(response.data.date),\n        file: response.data.file,\n        data: response.data.data\n      }, () => {\n        if (this.state.data === \"PCR\") {\n          this.setState({\n            graphData: JSON.parse(this.state.file)\n          });\n        }\n      });\n    });\n    axios.get('http://localhost:5000/users/').then(response => {\n      if (response.data.length > 0) {\n        this.setState({\n          users: response.data.map(user => user.username)\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  onChangeDiagnosis(e) {\n    var res = false;\n\n    if (e.target.value == 'Positive') {\n      res = true;\n    }\n\n    this.setState({\n      positive: res\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const post = {\n      username: this.state.username,\n      description: this.state.description,\n      date: this.state.date,\n      file: this.state.file,\n      complete: true,\n      positive: this.state.positive\n    };\n    console.log(post);\n    axios.post('http://localhost:5000/posts/update/' + this.props.match.params.id, post).then(res => console.log(res.data));\n    window.location = '/';\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }, \"Label Image\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, this.state.username, \"'s Task\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, \"Instructions: \", this.state.description)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, \"Due Date: \", String(this.state.date))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, this.state.data === \"PCR\" ? /*#__PURE__*/React.createElement(\"div\", {\n      width: 500,\n      height: 300,\n      style: {\n        backgroundColor: \"yellow\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      data: this.parseJsonToGraphableData(this.state.graphData),\n      axes: this.createAxes(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    })) : /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.file,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, \"Result: \"), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.onChangeDiagnosis,\n      defaultValue: 'Negative',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      key: \"Positive\",\n      value: \"Positive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, \"Positive\"), /*#__PURE__*/React.createElement(\"option\", {\n      key: \"Negative\",\n      value: \"Negative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, \"Negative\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit Task\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/lebowitz/Desktop/calHackathon/covid/src/components/edit-post.component.js"],"names":["React","Component","axios","Chart","EditPost","constructor","props","onSubmit","bind","onChangeDiagnosis","parseJsonToGraphableData","createAxes","state","username","description","date","Date","file","positive","graphData","data","jsonData","console","log","storage","i","length","whichLine","dataKey","Object","keys","push","label","currentLine","parseFloat","primary","type","position","componentDidMount","match","params","id","get","then","response","setState","JSON","parse","users","map","user","catch","error","e","res","target","value","preventDefault","post","complete","window","location","render","String","display","justifyContent","alignItems","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Chart } from 'react-charts'\n\nexport default class EditPost extends Component {\n  constructor(props) {\n    super(props);\n    //ensures that the this called in the methods are the same this in the class\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChangeDiagnosis = this.onChangeDiagnosis.bind(this);\n    this.parseJsonToGraphableData = this.parseJsonToGraphableData.bind(this)\n    this.createAxes = this.createAxes.bind(this)\n    //state is how you create vars in react\n    this.state = {\n      username: '',\n      description: '',\n      date: new Date(),\n      file: '',\n      positive: false,\n      graphData: [],\n      data: ''\n    }\n  }\n  parseJsonToGraphableData(jsonData){\n    console.log(\"here\")\n    var storage = []\n    for (var i = 0; i < jsonData.length; i++){\n      var whichLine = 0\n      for (var dataKey of Object.keys(jsonData[i])){\n        if (i === 0){\n          storage.push({label: dataKey, data: []})\n        }\n        storage[currentLine].data.push([i, parseFloat(jsonData[i].dataKey)])\n        currentLine++\n      }\n    }\n    return storage\n  }\n  createAxes(){\n    return (\n      [\n        { primary: true, type: 'linear', position: 'bottom' },\n        { type: 'linear', position: 'left' }\n      ]\n    )\n  }\n  componentDidMount() {\n    console.log(this.props.match.params.id)\n    axios.get('http://localhost:5000/posts/' + this.props.match.params.id)\n      .then(response => {\n        console.log(response.data)\n        this.setState({\n          username: response.data.username,\n          description: response.data.description,\n          date: new Date(response.data.date),\n          file: response.data.file,\n          data: response.data.data\n        }, () => {\n          if (this.state.data === \"PCR\"){\n            this.setState({ graphData: JSON.parse(this.state.file) })\n          }\n        })\n        \n      })\n    axios.get('http://localhost:5000/users/')\n      .then(response => {\n        if (response.data.length > 0) {\n          this.setState({\n            users: response.data.map(user => user.username),\n          })\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n\n  }\n  onChangeDiagnosis(e) {\n    var res = false;\n    if(e.target.value == 'Positive') {\n      res = true;\n    }\n    this.setState({\n      positive: res\n    });\n  }\n  onSubmit(e) {\n    e.preventDefault();\n\n    const post = {\n      username: this.state.username,\n      description: this.state.description,\n      date: this.state.date,\n      file: this.state.file,\n      complete: true,\n      positive: this.state.positive\n    }\n\n    console.log(post);\n\n    axios.post('http://localhost:5000/posts/update/' + this.props.match.params.id, post)\n      .then(res => console.log(res.data));\n\n    window.location = '/';\n  }\n\n  render() {\n    return (\n    <div>\n      <h3>Label Image</h3>\n      <form onSubmit={this.onSubmit}>\n        <div className=\"form-group\">\n          <label>{this.state.username}'s Task</label>\n        </div>\n        <div className=\"form-group\">\n          <p>Instructions: {this.state.description}</p>\n        </div>\n        <div className=\"form-group\">\n          <label>Due Date: {String(this.state.date)}</label>\n        </div>\n        <div style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\n          {this.state.data === \"PCR\" ?\n            <div width={500} height={300} style={{backgroundColor: \"yellow\"}}>\n              <Chart data={this.parseJsonToGraphableData(this.state.graphData)} axes={this.createAxes()}/>\n            </div>\n          :\n            <img src={this.state.file} alt=\"\"/>\n          }\n        </div>\n        <div>\n          <label>Result: </label>\n          <select onChange={this.onChangeDiagnosis} defaultValue={'Negative'}>\n            <option key='Positive' value='Positive'>Positive</option>\n            <option key='Negative' value='Negative'>Negative</option>\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <input type=\"submit\" value=\"Submit Task\" className=\"btn btn-primary\" />\n        </div>\n      </form>\n    </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}