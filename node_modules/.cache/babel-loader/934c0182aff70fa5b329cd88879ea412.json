{"ast":null,"code":"var React, classSet, createToolButton;\nReact = require('./React-shim');\nclassSet = require('../core/util').classSet;\n\ncreateToolButton = function (tool) {\n  var displayName, imageName;\n  displayName = tool.name;\n  imageName = tool.iconName;\n  return React.createFactory(React.createClass({\n    displayName: displayName,\n    getDefaultProps: function () {\n      return {\n        isSelected: false,\n        lc: null\n      };\n    },\n    componentWillMount: function () {\n      if (this.props.isSelected) {\n        return this.props.lc.setTool(tool);\n      }\n    },\n    render: function () {\n      var className, div, imageURLPrefix, img, isSelected, onSelect, ref, ref1, src;\n      ref = React.DOM, div = ref.div, img = ref.img;\n      ref1 = this.props, imageURLPrefix = ref1.imageURLPrefix, isSelected = ref1.isSelected, onSelect = ref1.onSelect;\n      className = classSet({\n        'lc-pick-tool': true,\n        'toolbar-button': true,\n        'thin-button': true,\n        'selected': isSelected\n      });\n      src = imageURLPrefix + \"/\" + imageName + \".png\";\n      return div({\n        className: className,\n        style: {\n          'backgroundImage': \"url(\" + src + \")\"\n        },\n        onClick: function () {\n          return onSelect(tool);\n        },\n        title: displayName\n      });\n    }\n  }));\n};\n\nmodule.exports = createToolButton;","map":{"version":3,"sources":["C:/Users/lukeq/blog/node_modules/literallycanvas/lib/js/reactGUI/createToolButton.js"],"names":["React","classSet","createToolButton","require","tool","displayName","imageName","name","iconName","createFactory","createClass","getDefaultProps","isSelected","lc","componentWillMount","props","setTool","render","className","div","imageURLPrefix","img","onSelect","ref","ref1","src","DOM","style","onClick","title","module","exports"],"mappings":"AAAA,IAAIA,KAAJ,EAAWC,QAAX,EAAqBC,gBAArB;AAEAF,KAAK,GAAGG,OAAO,CAAC,cAAD,CAAf;AAEAF,QAAQ,GAAGE,OAAO,CAAC,cAAD,CAAP,CAAwBF,QAAnC;;AAEAC,gBAAgB,GAAG,UAASE,IAAT,EAAe;AAChC,MAAIC,WAAJ,EAAiBC,SAAjB;AACAD,EAAAA,WAAW,GAAGD,IAAI,CAACG,IAAnB;AACAD,EAAAA,SAAS,GAAGF,IAAI,CAACI,QAAjB;AACA,SAAOR,KAAK,CAACS,aAAN,CAAoBT,KAAK,CAACU,WAAN,CAAkB;AAC3CL,IAAAA,WAAW,EAAEA,WAD8B;AAE3CM,IAAAA,eAAe,EAAE,YAAW;AAC1B,aAAO;AACLC,QAAAA,UAAU,EAAE,KADP;AAELC,QAAAA,EAAE,EAAE;AAFC,OAAP;AAID,KAP0C;AAQ3CC,IAAAA,kBAAkB,EAAE,YAAW;AAC7B,UAAI,KAAKC,KAAL,CAAWH,UAAf,EAA2B;AACzB,eAAO,KAAKG,KAAL,CAAWF,EAAX,CAAcG,OAAd,CAAsBZ,IAAtB,CAAP;AACD;AACF,KAZ0C;AAa3Ca,IAAAA,MAAM,EAAE,YAAW;AACjB,UAAIC,SAAJ,EAAeC,GAAf,EAAoBC,cAApB,EAAoCC,GAApC,EAAyCT,UAAzC,EAAqDU,QAArD,EAA+DC,GAA/D,EAAoEC,IAApE,EAA0EC,GAA1E;AACAF,MAAAA,GAAG,GAAGvB,KAAK,CAAC0B,GAAZ,EAAiBP,GAAG,GAAGI,GAAG,CAACJ,GAA3B,EAAgCE,GAAG,GAAGE,GAAG,CAACF,GAA1C;AACAG,MAAAA,IAAI,GAAG,KAAKT,KAAZ,EAAmBK,cAAc,GAAGI,IAAI,CAACJ,cAAzC,EAAyDR,UAAU,GAAGY,IAAI,CAACZ,UAA3E,EAAuFU,QAAQ,GAAGE,IAAI,CAACF,QAAvG;AACAJ,MAAAA,SAAS,GAAGjB,QAAQ,CAAC;AACnB,wBAAgB,IADG;AAEnB,0BAAkB,IAFC;AAGnB,uBAAe,IAHI;AAInB,oBAAYW;AAJO,OAAD,CAApB;AAMAa,MAAAA,GAAG,GAAGL,cAAc,GAAG,GAAjB,GAAuBd,SAAvB,GAAmC,MAAzC;AACA,aAAOa,GAAG,CAAC;AACTD,QAAAA,SAAS,EAAEA,SADF;AAETS,QAAAA,KAAK,EAAE;AACL,6BAAmB,SAASF,GAAT,GAAe;AAD7B,SAFE;AAKTG,QAAAA,OAAO,EAAG,YAAW;AACnB,iBAAON,QAAQ,CAAClB,IAAD,CAAf;AACD,SAPQ;AAQTyB,QAAAA,KAAK,EAAExB;AARE,OAAD,CAAV;AAUD;AAlC0C,GAAlB,CAApB,CAAP;AAoCD,CAxCD;;AA0CAyB,MAAM,CAACC,OAAP,GAAiB7B,gBAAjB","sourcesContent":["var React, classSet, createToolButton;\n\nReact = require('./React-shim');\n\nclassSet = require('../core/util').classSet;\n\ncreateToolButton = function(tool) {\n  var displayName, imageName;\n  displayName = tool.name;\n  imageName = tool.iconName;\n  return React.createFactory(React.createClass({\n    displayName: displayName,\n    getDefaultProps: function() {\n      return {\n        isSelected: false,\n        lc: null\n      };\n    },\n    componentWillMount: function() {\n      if (this.props.isSelected) {\n        return this.props.lc.setTool(tool);\n      }\n    },\n    render: function() {\n      var className, div, imageURLPrefix, img, isSelected, onSelect, ref, ref1, src;\n      ref = React.DOM, div = ref.div, img = ref.img;\n      ref1 = this.props, imageURLPrefix = ref1.imageURLPrefix, isSelected = ref1.isSelected, onSelect = ref1.onSelect;\n      className = classSet({\n        'lc-pick-tool': true,\n        'toolbar-button': true,\n        'thin-button': true,\n        'selected': isSelected\n      });\n      src = imageURLPrefix + \"/\" + imageName + \".png\";\n      return div({\n        className: className,\n        style: {\n          'backgroundImage': \"url(\" + src + \")\"\n        },\n        onClick: (function() {\n          return onSelect(tool);\n        }),\n        title: displayName\n      });\n    }\n  }));\n};\n\nmodule.exports = createToolButton;\n"]},"metadata":{},"sourceType":"script"}