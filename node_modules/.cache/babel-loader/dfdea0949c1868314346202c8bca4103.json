{"ast":null,"code":"var _jsxFileName = \"/Users/lebowitz/Desktop/calHackathon/covid/src/components/edit-post.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nexport default class EditPost extends Component {\n  constructor(props) {\n    super(props); //ensures that the this called in the methods are the same this in the class\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChangeDiagnosis = this.onChangeDiagnosis.bind(this);\n    this.createGraphData = this.createGraphData.bind(this); //state is how you create vars in react\n\n    this.state = {\n      username: '',\n      description: '',\n      date: new Date(),\n      file: '',\n      positive: false,\n      data: ''\n    };\n  }\n\n  createGraphData(jsonDataStr) {\n    var cleanedString = jsonDataStr.replace(/\\'/gi, '');\n    console.log(cleanedString);\n    var jsonData = JSON.parse(cleanedString);\n    return jsonData;\n  }\n\n  createAxes() {\n    return [{\n      primary: true,\n      type: 'linear',\n      position: 'bottom'\n    }, {\n      type: 'linear',\n      position: 'left'\n    }];\n  }\n\n  componentDidMount() {\n    console.log(this.props.match.params.id);\n    axios.get('http://localhost:5000/posts/' + this.props.match.params.id).then(response => {\n      console.log(response.data);\n      this.setState({\n        username: response.data.username,\n        description: response.data.description,\n        date: new Date(response.data.date),\n        file: response.data.file,\n        data: response.data.data\n      });\n    });\n    axios.get('http://localhost:5000/users/').then(response => {\n      if (response.data.length > 0) {\n        this.setState({\n          users: response.data.map(user => user.username)\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  onChangeDiagnosis(e) {\n    var res = false;\n\n    if (e.target.value == 'Positive') {\n      res = true;\n    }\n\n    this.setState({\n      positive: res\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const post = {\n      username: this.state.username,\n      description: this.state.description,\n      date: this.state.date,\n      file: this.state.file,\n      complete: true,\n      positive: this.state.positive\n    };\n    console.log(post);\n    axios.post('http://localhost:5000/posts/update/' + this.props.match.params.id, post).then(res => console.log(res.data));\n    window.location = '/';\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, \"Label Image\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, this.state.username, \"'s Task\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, \"Instructions: \", this.state.description)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, \"Due Date: \", String(this.state.date))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, this.state.data === \"PCR\" ? /*#__PURE__*/React.createElement(LineChart, {\n      width: 500,\n      height: 300,\n      data: this.createGraphData(this.state.file),\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"Water\",\n      stroke: \"#8884d8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"mRNA-a\",\n      stroke: \"#82ca9d\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"mRNA-b\",\n      stroke: \"#82ca9d\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    })) : /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.file,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, \"Result: \"), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.onChangeDiagnosis,\n      defaultValue: 'Negative',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      key: \"Positive\",\n      value: \"Positive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, \"Positive\"), /*#__PURE__*/React.createElement(\"option\", {\n      key: \"Negative\",\n      value: \"Negative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, \"Negative\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit Task\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/lebowitz/Desktop/calHackathon/covid/src/components/edit-post.component.js"],"names":["React","Component","axios","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","EditPost","constructor","props","onSubmit","bind","onChangeDiagnosis","createGraphData","state","username","description","date","Date","file","positive","data","jsonDataStr","cleanedString","replace","console","log","jsonData","JSON","parse","createAxes","primary","type","position","componentDidMount","match","params","id","get","then","response","setState","length","users","map","user","catch","error","e","res","target","value","preventDefault","post","complete","window","location","render","String","display","justifyContent","alignItems","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nexport default class EditPost extends Component {\n  constructor(props) {\n    super(props);\n    //ensures that the this called in the methods are the same this in the class\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChangeDiagnosis = this.onChangeDiagnosis.bind(this);\n    this.createGraphData = this.createGraphData.bind(this)\n    //state is how you create vars in react\n    this.state = {\n      username: '',\n      description: '',\n      date: new Date(),\n      file: '',\n      positive: false,\n      data: '',\n      \n    }\n  }\n  createGraphData(jsonDataStr){\n    var cleanedString = jsonDataStr.replace(/\\'/gi,'')\n    console.log(cleanedString)\n    var jsonData = JSON.parse(cleanedString)\n    return jsonData\n  }\n  createAxes(){\n    return (\n      [\n        { primary: true, type: 'linear', position: 'bottom' },\n        { type: 'linear', position: 'left' }\n      ]\n    )\n  }\n  componentDidMount() {\n    console.log(this.props.match.params.id)\n    axios.get('http://localhost:5000/posts/' + this.props.match.params.id)\n      .then(response => {\n        console.log(response.data)\n        this.setState({\n          username: response.data.username,\n          description: response.data.description,\n          date: new Date(response.data.date),\n          file: response.data.file,\n          data: response.data.data\n        })\n        \n      })\n    axios.get('http://localhost:5000/users/')\n      .then(response => {\n        if (response.data.length > 0) {\n          this.setState({\n            users: response.data.map(user => user.username),\n          })\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n\n  }\n  onChangeDiagnosis(e) {\n    var res = false;\n    if(e.target.value == 'Positive') {\n      res = true;\n    }\n    this.setState({\n      positive: res\n    });\n  }\n  onSubmit(e) {\n    e.preventDefault();\n\n    const post = {\n      username: this.state.username,\n      description: this.state.description,\n      date: this.state.date,\n      file: this.state.file,\n      complete: true,\n      positive: this.state.positive\n    }\n\n    console.log(post);\n\n    axios.post('http://localhost:5000/posts/update/' + this.props.match.params.id, post)\n      .then(res => console.log(res.data));\n\n    window.location = '/';\n  }\n\n  render() {\n    return (\n    <div>\n      <h3>Label Image</h3>\n      <form onSubmit={this.onSubmit}>\n        <div className=\"form-group\">\n          <label>{this.state.username}'s Task</label>\n        </div>\n        <div className=\"form-group\">\n          <p>Instructions: {this.state.description}</p>\n        </div>\n        <div className=\"form-group\">\n          <label>Due Date: {String(this.state.date)}</label>\n        </div>\n        <div style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\n          {this.state.data === \"PCR\" ?\n            <LineChart \n              width={500} \n              height={300} \n              data={this.createGraphData(this.state.file)}\n              margin={{\n                top: 5, right: 30, left: 20, bottom: 5,\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Line type=\"monotone\" dataKey=\"Water\" stroke=\"#8884d8\" />\n              <Line type=\"monotone\" dataKey=\"mRNA-a\" stroke=\"#82ca9d\" />\n              <Line type=\"monotone\" dataKey=\"mRNA-b\" stroke=\"#82ca9d\" />\n            </LineChart>\n          :\n            <img src={this.state.file} alt=\"\"/>\n          }\n        </div>\n        <div>\n          <label>Result: </label>\n          <select onChange={this.onChangeDiagnosis} defaultValue={'Negative'}>\n            <option key='Positive' value='Positive'>Positive</option>\n            <option key='Negative' value='Negative'>Negative</option>\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <input type=\"submit\" value=\"Submit Task\" className=\"btn btn-primary\" />\n        </div>\n      </form>\n    </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}