{"ast":null,"code":"var INFINITE, JSONToShape, renderWatermark, util;\nutil = require('./util');\nJSONToShape = require('./shapes').JSONToShape;\nINFINITE = 'infinite';\n\nrenderWatermark = function (ctx, image, scale) {\n  if (!image.width) {\n    return;\n  }\n\n  ctx.save();\n  ctx.translate(ctx.canvas.width / 2, ctx.canvas.height / 2);\n  ctx.scale(scale, scale);\n  ctx.drawImage(image, -image.width / 2, -image.height / 2);\n  return ctx.restore();\n};\n\nmodule.exports = function (snapshot, opts) {\n  var allShapes, backgroundShapes, colors, imageSize, s, shapes, watermarkCanvas, watermarkCtx;\n\n  if (opts == null) {\n    opts = {};\n  }\n\n  if (opts.scale == null) {\n    opts.scale = 1;\n  }\n\n  shapes = function () {\n    var i, len, ref, results;\n    ref = snapshot.shapes;\n    results = [];\n\n    for (i = 0, len = ref.length; i < len; i++) {\n      s = ref[i];\n      results.push(JSONToShape(s));\n    }\n\n    return results;\n  }();\n\n  backgroundShapes = [];\n\n  if (snapshot.backgroundShapes) {\n    backgroundShapes = function () {\n      var i, len, ref, results;\n      ref = snapshot.backgroundShapes;\n      results = [];\n\n      for (i = 0, len = ref.length; i < len; i++) {\n        s = ref[i];\n        results.push(JSONToShape(s));\n      }\n\n      return results;\n    }();\n  }\n\n  if (opts.margin == null) {\n    opts.margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    };\n  }\n\n  imageSize = snapshot.imageSize || {\n    width: INFINITE,\n    height: INFINITE\n  };\n  colors = snapshot.colors || {\n    background: 'transparent'\n  };\n  allShapes = shapes.concat(backgroundShapes);\n  watermarkCanvas = document.createElement('canvas');\n  watermarkCtx = watermarkCanvas.getContext('2d');\n\n  if (opts.rect) {\n    opts.rect.x -= opts.margin.left;\n    opts.rect.y -= opts.margin.top;\n    opts.rect.width += opts.margin.left + opts.margin.right;\n    opts.rect.height += opts.margin.top + opts.margin.bottom;\n  } else {\n    opts.rect = util.getDefaultImageRect(function () {\n      var i, len, results;\n      results = [];\n\n      for (i = 0, len = allShapes.length; i < len; i++) {\n        s = allShapes[i];\n        results.push(s.getBoundingRect(watermarkCtx));\n      }\n\n      return results;\n    }(), imageSize, opts.margin);\n  }\n\n  watermarkCanvas.width = opts.rect.width * opts.scale;\n  watermarkCanvas.height = opts.rect.height * opts.scale;\n  watermarkCtx.fillStyle = colors.background;\n  watermarkCtx.fillRect(0, 0, watermarkCanvas.width, watermarkCanvas.height);\n\n  if (!(opts.rect.width && opts.rect.height)) {\n    return null;\n  }\n\n  if (opts.watermarkImage) {\n    renderWatermark(watermarkCtx, opts.watermarkImage, opts.watermarkScale);\n  }\n\n  return util.combineCanvases(watermarkCanvas, util.renderShapes(backgroundShapes, opts.rect, opts.scale), util.renderShapes(shapes, opts.rect, opts.scale));\n};","map":{"version":3,"sources":["C:/Users/lukeq/blog/node_modules/literallycanvas/lib/js/core/renderSnapshotToImage.js"],"names":["INFINITE","JSONToShape","renderWatermark","util","require","ctx","image","scale","width","save","translate","canvas","height","drawImage","restore","module","exports","snapshot","opts","allShapes","backgroundShapes","colors","imageSize","s","shapes","watermarkCanvas","watermarkCtx","i","len","ref","results","length","push","margin","top","right","bottom","left","background","concat","document","createElement","getContext","rect","x","y","getDefaultImageRect","getBoundingRect","fillStyle","fillRect","watermarkImage","watermarkScale","combineCanvases","renderShapes"],"mappings":"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","sourcesContent":["var INFINITE, JSONToShape, renderWatermark, util;\n\nutil = require('./util');\n\nJSONToShape = require('./shapes').JSONToShape;\n\nINFINITE = 'infinite';\n\nrenderWatermark = function(ctx, image, scale) {\n  if (!image.width) {\n    return;\n  }\n  ctx.save();\n  ctx.translate(ctx.canvas.width / 2, ctx.canvas.height / 2);\n  ctx.scale(scale, scale);\n  ctx.drawImage(image, -image.width / 2, -image.height / 2);\n  return ctx.restore();\n};\n\nmodule.exports = function(snapshot, opts) {\n  var allShapes, backgroundShapes, colors, imageSize, s, shapes, watermarkCanvas, watermarkCtx;\n  if (opts == null) {\n    opts = {};\n  }\n  if (opts.scale == null) {\n    opts.scale = 1;\n  }\n  shapes = (function() {\n    var i, len, ref, results;\n    ref = snapshot.shapes;\n    results = [];\n    for (i = 0, len = ref.length; i < len; i++) {\n      s = ref[i];\n      results.push(JSONToShape(s));\n    }\n    return results;\n  })();\n  backgroundShapes = [];\n  if (snapshot.backgroundShapes) {\n    backgroundShapes = (function() {\n      var i, len, ref, results;\n      ref = snapshot.backgroundShapes;\n      results = [];\n      for (i = 0, len = ref.length; i < len; i++) {\n        s = ref[i];\n        results.push(JSONToShape(s));\n      }\n      return results;\n    })();\n  }\n  if (opts.margin == null) {\n    opts.margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    };\n  }\n  imageSize = snapshot.imageSize || {\n    width: INFINITE,\n    height: INFINITE\n  };\n  colors = snapshot.colors || {\n    background: 'transparent'\n  };\n  allShapes = shapes.concat(backgroundShapes);\n  watermarkCanvas = document.createElement('canvas');\n  watermarkCtx = watermarkCanvas.getContext('2d');\n  if (opts.rect) {\n    opts.rect.x -= opts.margin.left;\n    opts.rect.y -= opts.margin.top;\n    opts.rect.width += opts.margin.left + opts.margin.right;\n    opts.rect.height += opts.margin.top + opts.margin.bottom;\n  } else {\n    opts.rect = util.getDefaultImageRect((function() {\n      var i, len, results;\n      results = [];\n      for (i = 0, len = allShapes.length; i < len; i++) {\n        s = allShapes[i];\n        results.push(s.getBoundingRect(watermarkCtx));\n      }\n      return results;\n    })(), imageSize, opts.margin);\n  }\n  watermarkCanvas.width = opts.rect.width * opts.scale;\n  watermarkCanvas.height = opts.rect.height * opts.scale;\n  watermarkCtx.fillStyle = colors.background;\n  watermarkCtx.fillRect(0, 0, watermarkCanvas.width, watermarkCanvas.height);\n  if (!(opts.rect.width && opts.rect.height)) {\n    return null;\n  }\n  if (opts.watermarkImage) {\n    renderWatermark(watermarkCtx, opts.watermarkImage, opts.watermarkScale);\n  }\n  return util.combineCanvases(watermarkCanvas, util.renderShapes(backgroundShapes, opts.rect, opts.scale), util.renderShapes(shapes, opts.rect, opts.scale));\n};\n"]},"metadata":{},"sourceType":"script"}