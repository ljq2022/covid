{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lukeq\\\\blog\\\\src\\\\components\\\\post-list.component.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Post = props => /*#__PURE__*/React.createElement(\"tr\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }\n}, props.post.username), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }\n}, props.post.description), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }\n}, props.post.date.substring(0, 10)), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"img\", {\n  src: props.post.file,\n  alt: \"\",\n  width: \"40\",\n  height: \"40\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }\n})), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}, props.post.data), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Link, {\n  to: \"/edit/\" + props.post._id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }\n}, \"label\"), \" | \", /*#__PURE__*/React.createElement(\"a\", {\n  href: \"#\",\n  onClick: () => {\n    props.completePost(props.post._id);\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 57\n  }\n}, \"mark complete\"), /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(\"a\", {\n  href: \"#\",\n  onClick: () => {\n    props.deletePost(props.post._id);\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }\n}, \"delete\"))); //class component\n\n\nexport default class PostList extends Component {\n  constructor(props) {\n    super(props);\n    this.completePost = this.completePost.bind(this);\n    this.deletePost = this.deletePost.bind(this);\n    this.filterPosts = this.filterPosts.bind(this);\n    this.state = {\n      filteredPosts: []\n    };\n  }\n\n  componentDidMount() {\n    this.filterPosts(this.refs._filterSelection.target == null ? \"\" : this.refs._filterSelection.target.value);\n  }\n\n  deletePost(id) {\n    axios.delete('http://localhost:5000/posts/' + id).then(response => {\n      console.log(response.data);\n    });\n    this.filterPosts(this.refs._filterSelection.target.value);\n  }\n\n  completePost(id) {\n    var completedPost;\n\n    for (var i = 0; i < this.state.filteredPosts.length; i++) {\n      if (this.state.filteredPosts[i]._id === id) {\n        completedPost = this.state.filteredPosts[i];\n        this.state.filteredPosts[i].complete = true;\n        break;\n      }\n    }\n\n    const res = {\n      username: completedPost.username,\n      description: completedPost.description,\n      date: completedPost.date,\n      file: completedPost.file,\n      complete: true\n    };\n    axios.post('http://localhost:5000/posts/update/' + id, res).then(response => {\n      console.log(response.data);\n    });\n  }\n\n  filterPosts(pickerSelectionValue) {\n    switch (pickerSelectionValue) {\n      case \"All Tasks\":\n        axios.get(\"http://localhost:5000/posts\").then(function (res) {\n          this.setState({\n            filteredPosts: res.data\n          });\n        }.bind(this)).catch(function (error) {\n          console.log(error);\n        });\n        break;\n\n      case \"Tasks Not Completed\":\n        axios.get(\"http://localhost:5000/posts/tasksNotCompleted\").then(function (res) {\n          this.setState({\n            filteredPosts: res.data\n          });\n        }.bind(this)).catch(function (error) {\n          console.log(error);\n        });\n        break;\n\n      case \"Tasks Already Completed\":\n        axios.get(\"http://localhost:5000/posts/tasksAlreadyCompleted\").then(function (res) {\n          this.setState({\n            filteredPosts: res.data\n          });\n        }.bind(this)).catch(function (error) {\n          console.log(error);\n        });\n        break;\n\n      case \"Tasks I Created\":\n        axios.get(\"http://localhost:5000/posts/tasksICreated\").then(function (res) {\n          this.setState({\n            filteredPosts: res.data\n          });\n        }.bind(this)).catch(function (error) {\n          console.log(error);\n        });\n        break;\n\n      case \"Public Tasks\":\n        axios.get(\"http://localhost:5000/posts/publicTasks\").then(function (res) {\n          this.setState({\n            filteredPosts: res.data\n          });\n        }.bind(this)).catch(function (error) {\n          console.log(error);\n        });\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  postList() {\n    return this.state.filteredPosts.map(currentpost => {\n      console.log('POST LIST');\n      console.log(currentpost);\n      return /*#__PURE__*/React.createElement(Post, {\n        post: currentpost,\n        completePost: this.completePost,\n        deletePost: this.deletePost,\n        key: currentpost._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 14\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, \"Posts\"), /*#__PURE__*/React.createElement(\"select\", {\n      ref: \"_filterSelection\",\n      onChange: this.filterPosts,\n      defaultValue: 'All Tasks',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"All Tasks\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, \"All Tasks\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Tasks Not Completed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, \"Tasks Not Completed\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Tasks Already Completed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, \"Tasks Already Completed\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Tasks I Created\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }, \"Tasks I Created\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Public Tasks\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, \"Public Tasks\")), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    }, \"File\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, \"Type\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, \"Actions\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }, this.postList())));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/lukeq/blog/src/components/post-list.component.js"],"names":["React","Component","Link","axios","Post","props","post","username","description","date","substring","file","data","_id","completePost","deletePost","PostList","constructor","bind","filterPosts","state","filteredPosts","componentDidMount","refs","_filterSelection","target","value","id","delete","then","response","console","log","completedPost","i","length","complete","res","pickerSelectionValue","get","setState","catch","error","postList","map","currentpost","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Post = props => (\r\n  <tr>\r\n    <td>{props.post.username}</td>\r\n    <td>{props.post.description}</td>\r\n    <td>{props.post.date.substring(0,10)}</td>\r\n    <td><img src={props.post.file} alt=\"\" width=\"40\" height=\"40\" /></td>\r\n    <td>{props.post.data}</td>\r\n    <td>\r\n      <Link to={\"/edit/\"+props.post._id}>label</Link> | <a href=\"#\" onClick={() => { props.completePost(props.post._id) }}>mark complete</a>\r\n      <br/>\r\n      <a href=\"#\" onClick={() => { props.deletePost(props.post._id) }}>delete</a>\r\n    </td>\r\n  </tr>\r\n)\r\n\r\n//class component\r\nexport default class PostList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.completePost = this.completePost.bind(this)\r\n    this.deletePost = this.deletePost.bind(this);\r\n    this.filterPosts = this.filterPosts.bind(this)\r\n\r\n    this.state = {\r\n      filteredPosts: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.filterPosts(this.refs._filterSelection.target == null ? \"\" : this.refs._filterSelection.target.value)\r\n  }\r\n  deletePost(id) {\r\n    axios.delete('http://localhost:5000/posts/'+id)\r\n      .then(response => { console.log(response.data)});\r\n\r\n    this.filterPosts(this.refs._filterSelection.target.value)\r\n  }\r\n  completePost(id) {\r\n    var completedPost;\r\n    for(var i = 0; i < this.state.filteredPosts.length; i++) {\r\n      if(this.state.filteredPosts[i]._id === id) {\r\n        completedPost = this.state.filteredPosts[i];\r\n        this.state.filteredPosts[i].complete = true;\r\n        break;\r\n      }\r\n    }\r\n    const res = {\r\n      username: completedPost.username,\r\n      description: completedPost.description,\r\n      date: completedPost.date,\r\n      file: completedPost.file,\r\n      complete: true\r\n    };\r\n    axios.post('http://localhost:5000/posts/update/'+id, res)\r\n      .then(response => { console.log(response.data)});\r\n  }\r\n\r\n  filterPosts(pickerSelectionValue){\r\n    switch(pickerSelectionValue){\r\n      case \"All Tasks\":\r\n        axios.get(\"http://localhost:5000/posts\").then(function(res){\r\n          this.setState({filteredPosts: res.data})\r\n        }.bind(this)).catch(function(error){\r\n          console.log(error)\r\n        })\r\n        break\r\n\r\n      case \"Tasks Not Completed\":\r\n        axios.get(\"http://localhost:5000/posts/tasksNotCompleted\").then(function(res){\r\n          this.setState({filteredPosts: res.data})\r\n        }.bind(this)).catch(function(error){\r\n          console.log(error)\r\n        })\r\n        break\r\n\r\n      case \"Tasks Already Completed\":\r\n        axios.get(\"http://localhost:5000/posts/tasksAlreadyCompleted\").then(function(res){\r\n          this.setState({filteredPosts: res.data})\r\n        }.bind(this)).catch(function(error){\r\n          console.log(error)\r\n        })\r\n        break\r\n\r\n      case \"Tasks I Created\":\r\n        axios.get(\"http://localhost:5000/posts/tasksICreated\").then(function(res){\r\n          this.setState({filteredPosts: res.data})\r\n        }.bind(this)).catch(function(error){\r\n          console.log(error)\r\n        })\r\n        break\r\n\r\n      case \"Public Tasks\":\r\n        axios.get(\"http://localhost:5000/posts/publicTasks\").then(function(res){\r\n          this.setState({filteredPosts: res.data})\r\n        }.bind(this)).catch(function(error){\r\n          console.log(error)\r\n        })\r\n        break\r\n\r\n      default:\r\n        break\r\n    }\r\n   \r\n  }\r\n\r\n  postList() {\r\n    return this.state.filteredPosts.map(currentpost => {\r\n      console.log('POST LIST');\r\n      console.log(currentpost);\r\n      return <Post post={currentpost} completePost={this.completePost} deletePost={this.deletePost} key={currentpost._id}/>;\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Posts</h3>\r\n        <select ref=\"_filterSelection\" onChange={this.filterPosts} defaultValue={'All Tasks'}>\r\n          <option value='All Tasks'>All Tasks</option>\r\n          <option value='Tasks Not Completed'>Tasks Not Completed</option>\r\n          <option value='Tasks Already Completed'>Tasks Already Completed</option>\r\n          <option value='Tasks I Created'>Tasks I Created</option>\r\n          <option value='Public Tasks'>Public Tasks</option>\r\n        </select>\r\n        <table className=\"table\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th>Username</th>\r\n              <th>Description</th>\r\n              <th>Date</th>\r\n              <th>File</th>\r\n              <th>Type</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            { this.postList() }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}