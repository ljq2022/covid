{"ast":null,"code":"var Line,\n    ToolWithStroke,\n    createShape,\n    extend = function (child, parent) {\n  for (var key in parent) {\n    if (hasProp.call(parent, key)) child[key] = parent[key];\n  }\n\n  function ctor() {\n    this.constructor = child;\n  }\n\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n  child.__super__ = parent.prototype;\n  return child;\n},\n    hasProp = {}.hasOwnProperty;\n\nToolWithStroke = require('./base').ToolWithStroke;\ncreateShape = require('../core/shapes').createShape;\n\nmodule.exports = Line = function (superClass) {\n  extend(Line, superClass);\n\n  function Line() {\n    return Line.__super__.constructor.apply(this, arguments);\n  }\n\n  Line.prototype.name = 'Line';\n  Line.prototype.iconName = 'line';\n  Line.prototype.optionsStyle = 'line-options-and-stroke-width';\n\n  Line.prototype.begin = function (x, y, lc) {\n    return this.currentShape = createShape('Line', {\n      x1: x,\n      y1: y,\n      x2: x,\n      y2: y,\n      strokeWidth: this.strokeWidth,\n      dash: function () {\n        switch (false) {\n          case !this.isDashed:\n            return [this.strokeWidth * 2, this.strokeWidth * 4];\n\n          default:\n            return null;\n        }\n      }.call(this),\n      endCapShapes: this.hasEndArrow ? [null, 'arrow'] : null,\n      color: lc.getColor('primary')\n    });\n  };\n\n  Line.prototype[\"continue\"] = function (x, y, lc) {\n    this.currentShape.x2 = x;\n    this.currentShape.y2 = y;\n    return lc.drawShapeInProgress(this.currentShape);\n  };\n\n  Line.prototype.end = function (x, y, lc) {\n    return lc.saveShape(this.currentShape);\n  };\n\n  return Line;\n}(ToolWithStroke);","map":{"version":3,"sources":["C:/Users/lukeq/blog/node_modules/literallycanvas/lib/js/tools/Line.js"],"names":["Line","ToolWithStroke","createShape","extend","child","parent","key","hasProp","call","ctor","constructor","prototype","__super__","hasOwnProperty","require","module","exports","superClass","apply","arguments","name","iconName","optionsStyle","begin","x","y","lc","currentShape","x1","y1","x2","y2","strokeWidth","dash","isDashed","endCapShapes","hasEndArrow","color","getColor","drawShapeInProgress","end","saveShape"],"mappings":"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","sourcesContent":["var Line, ToolWithStroke, createShape,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nToolWithStroke = require('./base').ToolWithStroke;\n\ncreateShape = require('../core/shapes').createShape;\n\nmodule.exports = Line = (function(superClass) {\n  extend(Line, superClass);\n\n  function Line() {\n    return Line.__super__.constructor.apply(this, arguments);\n  }\n\n  Line.prototype.name = 'Line';\n\n  Line.prototype.iconName = 'line';\n\n  Line.prototype.optionsStyle = 'line-options-and-stroke-width';\n\n  Line.prototype.begin = function(x, y, lc) {\n    return this.currentShape = createShape('Line', {\n      x1: x,\n      y1: y,\n      x2: x,\n      y2: y,\n      strokeWidth: this.strokeWidth,\n      dash: (function() {\n        switch (false) {\n          case !this.isDashed:\n            return [this.strokeWidth * 2, this.strokeWidth * 4];\n          default:\n            return null;\n        }\n      }).call(this),\n      endCapShapes: this.hasEndArrow ? [null, 'arrow'] : null,\n      color: lc.getColor('primary')\n    });\n  };\n\n  Line.prototype[\"continue\"] = function(x, y, lc) {\n    this.currentShape.x2 = x;\n    this.currentShape.y2 = y;\n    return lc.drawShapeInProgress(this.currentShape);\n  };\n\n  Line.prototype.end = function(x, y, lc) {\n    return lc.saveShape(this.currentShape);\n  };\n\n  return Line;\n\n})(ToolWithStroke);\n"]},"metadata":{},"sourceType":"script"}