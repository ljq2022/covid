{"ast":null,"code":"var _jsxFileName = \"/Users/lebowitz/Desktop/calHackathon/covid/src/components/edit-post.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nexport default class EditPost extends Component {\n  constructor(props) {\n    super(props); //ensures that the this called in the methods are the same this in the class\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChangeDiagnosis = this.onChangeDiagnosis.bind(this);\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.draw = this.draw.bind(this);\n    this.createGraphData = this.createGraphData.bind(this);\n    this.findGraphKeys = this.findGraphKeys.bind(this);\n    this.randomColor = this.randomColor.bind(this); //state is how you create vars in react\n\n    this.state = {\n      username: '',\n      description: '',\n      date: new Date(),\n      file: '',\n      positive: false,\n      loading: true,\n      width: 0,\n      height: 0,\n      beginX: 0,\n      beginY: 0,\n      rect: {},\n      data: '',\n      lineKeys: []\n    };\n  }\n\n  createGraphData(jsonDataStr) {\n    var cleanedString = jsonDataStr.replace(/\\'/gi, '');\n    var jsonData = JSON.parse(cleanedString);\n    return jsonData;\n  }\n\n  findGraphKeys(jsonDataStr) {\n    var cleanedString = jsonDataStr.replace(/\\'/gi, '');\n    var jsonData = JSON.parse(cleanedString);\n    var lineKeysTemp = [];\n\n    for (var key of Object.keys(jsonData[0])) {\n      lineKeysTemp.push(key);\n    }\n\n    return lineKeysTemp;\n  }\n\n  randomColor() {\n    const red = Math.random() * 230;\n    const green = Math.random() * 230;\n    const blue = Math.random() * 230;\n    return \"rgb(\" + red + \",\" + green + \",\" + blue + \")\";\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/posts/' + this.props.match.params.id).then(response => {\n      this.setState({\n        username: response.data.username,\n        description: response.data.description,\n        date: new Date(response.data.date),\n        file: response.data.file,\n        data: response.data.data,\n        lineKeys: response.data.data === \"PCR\" ? this.findGraphKeys(response.data.file) : []\n      });\n\n      if (response.data.data == 'Image') {\n        this.setState({\n          height: response.data.height,\n          width: response.data.width\n        });\n      }\n    });\n  }\n\n  onMouseDown(e) {\n    var canvas = this.refs.canvas;\n    let rect = canvas.getBoundingClientRect();\n    let x = e.clientX - rect.left;\n    let y = e.clientY - rect.top;\n    var context = canvas.getContext('2d'); // the rectangle\n\n    context.beginPath();\n    context.rect(x, y, x, y);\n    context.closePath(); // the outline\n\n    context.lineWidth = 3;\n    context.strokeStyle = '#666666';\n    context.stroke();\n  }\n\n  onMouseMove(e) {}\n\n  onChangeDiagnosis(e) {\n    var res = false;\n\n    if (e.target.value == 'Positive') {\n      res = true;\n    }\n\n    this.setState({\n      positive: res\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const post = {\n      username: this.state.username,\n      description: this.state.description,\n      date: this.state.date,\n      file: this.state.file,\n      complete: true,\n      positive: this.state.positive\n    };\n    axios.post('http://localhost:5000/posts/update/' + this.props.match.params.id, post).then(res => console.log(res.data));\n    window.location = '/';\n  }\n\n  draw(startX, startY, drawing) {\n    if (this.state.data == 'Image') {\n      var canvas = this.refs.canvas;\n      var context = canvas.getContext('2d');\n      var imageObj = this.refs.image;\n\n      imageObj.onload = function () {\n        context.drawImage(imageObj, 0, 0);\n      };\n    }\n  }\n\n  render() {\n    this.draw();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }\n    }, \"Label Image\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }, this.state.username, \"'s Task\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, \"Instructions: \", this.state.description)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }, \"Due Date: \", String(this.state.date))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }, this.state.data === \"PCR\" ? /*#__PURE__*/React.createElement(LineChart, {\n      width: 500,\n      height: 300,\n      data: this.createGraphData(this.state.file),\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      domain: [0, 45],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 15\n      }\n    }), this.state.lineKeys.map(label => /*#__PURE__*/React.createElement(Line, {\n      key: label,\n      type: \"monotone\",\n      dataKey: label,\n      stroke: label === \"Water\" ? \"rgb(20,20,20)\" : this.randomColor(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"canvas\",\n      height: this.state.height,\n      width: this.state.width,\n      onMouseDown: this.onMouseDown,\n      onMouseMove: () => {\n        console.log('penis');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      ref: \"image\",\n      src: this.state.file,\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }\n    }, \"Result: \"), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.onChangeDiagnosis,\n      defaultValue: 'Negative',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      key: \"Positive\",\n      value: \"Positive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }, \"Positive\"), /*#__PURE__*/React.createElement(\"option\", {\n      key: \"Negative\",\n      value: \"Negative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, \"Negative\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit Task\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/lebowitz/Desktop/calHackathon/covid/src/components/edit-post.component.js"],"names":["React","Component","axios","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","EditPost","constructor","props","onSubmit","bind","onChangeDiagnosis","onMouseDown","draw","createGraphData","findGraphKeys","randomColor","state","username","description","date","Date","file","positive","loading","width","height","beginX","beginY","rect","data","lineKeys","jsonDataStr","cleanedString","replace","jsonData","JSON","parse","lineKeysTemp","key","Object","keys","push","red","Math","random","green","blue","componentDidMount","get","match","params","id","then","response","setState","e","canvas","refs","getBoundingClientRect","x","clientX","left","y","clientY","top","context","getContext","beginPath","closePath","lineWidth","strokeStyle","stroke","onMouseMove","res","target","value","preventDefault","post","complete","console","log","window","location","startX","startY","drawing","imageObj","image","onload","drawImage","render","String","display","justifyContent","alignItems","right","bottom","map","label"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nexport default class EditPost extends Component {\n  constructor(props) {\n    super(props);\n    //ensures that the this called in the methods are the same this in the class\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChangeDiagnosis = this.onChangeDiagnosis.bind(this);\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.draw = this.draw.bind(this);\n    this.createGraphData = this.createGraphData.bind(this)\n    this.findGraphKeys = this.findGraphKeys.bind(this)\n    this.randomColor = this.randomColor.bind(this)\n    //state is how you create vars in react\n    this.state = {\n      username: '',\n      description: '',\n      date: new Date(),\n      file: '',\n      positive: false,\n      loading: true,\n      width: 0,\n      height: 0,\n      beginX: 0,\n      beginY: 0,\n      rect: {},\n      data: '',\n      lineKeys: []\n    }\n  }\n\n  createGraphData(jsonDataStr){\n    var cleanedString = jsonDataStr.replace(/\\'/gi,'')\n    var jsonData = JSON.parse(cleanedString)\n    return jsonData\n  }\n\n  findGraphKeys(jsonDataStr){\n    var cleanedString = jsonDataStr.replace(/\\'/gi,'')\n    var jsonData = JSON.parse(cleanedString)\n    var lineKeysTemp = []\n    for (var key of Object.keys(jsonData[0])){\n      lineKeysTemp.push(key)\n    }\n    return lineKeysTemp\n  }\n\n  randomColor(){\n    const red = Math.random() * 230\n    const green = Math.random() * 230\n    const blue = Math.random() * 230\n    return \"rgb(\" + red + \",\" + green + \",\" + blue + \")\"\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/posts/' + this.props.match.params.id)\n      .then(response => {\n        this.setState({\n          username: response.data.username,\n          description: response.data.description,\n          date: new Date(response.data.date),\n          file: response.data.file,\n          data: response.data.data,\n          lineKeys: response.data.data === \"PCR\" ? this.findGraphKeys(response.data.file) : []\n        })\n        if(response.data.data == 'Image') {\n          this.setState({\n            height: response.data.height,\n            width: response.data.width\n          });\n        }\n      })\n  }\n  onMouseDown(e) {\n    var canvas = this.refs.canvas;\n    let rect = canvas.getBoundingClientRect();\n    let x = e.clientX - rect.left;\n    let y = e.clientY - rect.top;\n    var context = canvas.getContext('2d');\n    // the rectangle\n    context.beginPath();\n    context.rect(x, y, x, y);\n    context.closePath();\n\n    // the outline\n    context.lineWidth = 3;\n    context.strokeStyle = '#666666';\n    context.stroke();\n  }\n  onMouseMove(e) {\n\n  }\n  onChangeDiagnosis(e) {\n    var res = false;\n    if(e.target.value == 'Positive') {\n      res = true;\n    }\n    this.setState({\n      positive: res\n    });\n  }\n  onSubmit(e) {\n    e.preventDefault();\n\n    const post = {\n      username: this.state.username,\n      description: this.state.description,\n      date: this.state.date,\n      file: this.state.file,\n      complete: true,\n      positive: this.state.positive\n    }\n\n    axios.post('http://localhost:5000/posts/update/' + this.props.match.params.id, post)\n      .then(res => console.log(res.data));\n\n    window.location = '/';\n  }\n  draw(startX, startY, drawing) {\n    if(this.state.data == 'Image') {\n      var canvas = this.refs.canvas;\n      var context = canvas.getContext('2d');\n      var imageObj = this.refs.image;\n      imageObj.onload = function() {\n        context.drawImage(imageObj, 0, 0);\n      };\n    }\n  }\n  render() {\n    this.draw()\n    return (\n    <div>\n      <h3>Label Image</h3>\n      <form onSubmit={this.onSubmit}>\n        <div className=\"form-group\">\n          <label>{this.state.username}'s Task</label>\n        </div>\n        <div className=\"form-group\">\n          <p>Instructions: {this.state.description}</p>\n        </div>\n        <div className=\"form-group\">\n          <label>Due Date: {String(this.state.date)}</label>\n        </div>\n        <div style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\n          {this.state.data === \"PCR\" ?\n            <LineChart \n              width={500} \n              height={300} \n              data={this.createGraphData(this.state.file)}\n              margin={{\n                top: 5, right: 30, left: 20, bottom: 5,\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" />\n              <YAxis domain={[0,45]}/>\n              <Tooltip />\n              <Legend />\n              {this.state.lineKeys.map(label => \n                <Line key={label} type=\"monotone\" dataKey={label} stroke={label === \"Water\" ? \"rgb(20,20,20)\" : this.randomColor()} />\n              )}\n            </LineChart>\n          :\n            <div>\n              <canvas ref=\"canvas\" height={this.state.height}\n                width={this.state.width} onMouseDown={this.onMouseDown} onMouseMove={() => {console.log('penis')}}\n              />\n              <img ref=\"image\" src={this.state.file} style={{display: 'none'}} />\n            </div>\n          }\n        </div>\n        <div>\n          <label>Result: </label>\n          <select onChange={this.onChangeDiagnosis} defaultValue={'Negative'}>\n            <option key='Positive' value='Positive'>Positive</option>\n            <option key='Negative' value='Negative'>Negative</option>\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <input type=\"submit\" value=\"Submit Task\" className=\"btn btn-primary\" />\n        </div>\n      </form>\n    </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}