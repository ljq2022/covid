{"ast":null,"code":"var React, StrokeWidthPicker, createSetStateOnEventMixin, defineOptionsStyle;\nReact = require('../reactGUI/React-shim');\ndefineOptionsStyle = require('./optionsStyles').defineOptionsStyle;\nStrokeWidthPicker = React.createFactory(require('../reactGUI/StrokeWidthPicker'));\ncreateSetStateOnEventMixin = require('../reactGUI/createSetStateOnEventMixin');\ndefineOptionsStyle('polygon-and-stroke-width', React.createClass({\n  displayName: 'PolygonAndStrokeWidth',\n  getState: function () {\n    return {\n      strokeWidth: this.props.tool.strokeWidth,\n      inProgress: false\n    };\n  },\n  getInitialState: function () {\n    return this.getState();\n  },\n  mixins: [createSetStateOnEventMixin('toolChange')],\n  componentDidMount: function () {\n    var hidePolygonTools, showPolygonTools, unsubscribeFuncs;\n    unsubscribeFuncs = [];\n\n    this.unsubscribe = function (_this) {\n      return function () {\n        var func, i, len, results;\n        results = [];\n\n        for (i = 0, len = unsubscribeFuncs.length; i < len; i++) {\n          func = unsubscribeFuncs[i];\n          results.push(func());\n        }\n\n        return results;\n      };\n    }(this);\n\n    showPolygonTools = function (_this) {\n      return function () {\n        if (!_this.state.inProgress) {\n          return _this.setState({\n            inProgress: true\n          });\n        }\n      };\n    }(this);\n\n    hidePolygonTools = function (_this) {\n      return function () {\n        return _this.setState({\n          inProgress: false\n        });\n      };\n    }(this);\n\n    unsubscribeFuncs.push(this.props.lc.on('lc-polygon-started', showPolygonTools));\n    return unsubscribeFuncs.push(this.props.lc.on('lc-polygon-stopped', hidePolygonTools));\n  },\n  componentWillUnmount: function () {\n    return this.unsubscribe();\n  },\n  render: function () {\n    var div, img, lc, polygonCancel, polygonFinishClosed, polygonFinishOpen, polygonToolStyle, ref;\n    lc = this.props.lc;\n    ref = React.DOM, div = ref.div, img = ref.img;\n\n    polygonFinishOpen = function (_this) {\n      return function () {\n        return lc.trigger('lc-polygon-finishopen');\n      };\n    }(this);\n\n    polygonFinishClosed = function (_this) {\n      return function () {\n        return lc.trigger('lc-polygon-finishclosed');\n      };\n    }(this);\n\n    polygonCancel = function (_this) {\n      return function () {\n        return lc.trigger('lc-polygon-cancel');\n      };\n    }(this);\n\n    polygonToolStyle = {};\n\n    if (!this.state.inProgress) {\n      polygonToolStyle = {\n        display: 'none'\n      };\n    }\n\n    return div({}, div({\n      className: 'polygon-toolbar horz-toolbar',\n      style: polygonToolStyle\n    }, div({\n      className: 'square-toolbar-button',\n      onClick: polygonFinishOpen\n    }, img({\n      src: this.props.imageURLPrefix + \"/polygon-open.png\"\n    })), div({\n      className: 'square-toolbar-button',\n      onClick: polygonFinishClosed\n    }, img({\n      src: this.props.imageURLPrefix + \"/polygon-closed.png\"\n    })), div({\n      className: 'square-toolbar-button',\n      onClick: polygonCancel\n    }, img({\n      src: this.props.imageURLPrefix + \"/polygon-cancel.png\"\n    }))), div({}, StrokeWidthPicker({\n      tool: this.props.tool,\n      lc: this.props.lc\n    })));\n  }\n}));\nmodule.exports = {};","map":{"version":3,"sources":["C:/Users/lukeq/blog/node_modules/literallycanvas/lib/js/optionsStyles/polygon-and-stroke-width.js"],"names":["React","StrokeWidthPicker","createSetStateOnEventMixin","defineOptionsStyle","require","createFactory","createClass","displayName","getState","strokeWidth","props","tool","inProgress","getInitialState","mixins","componentDidMount","hidePolygonTools","showPolygonTools","unsubscribeFuncs","unsubscribe","_this","func","i","len","results","length","push","state","setState","lc","on","componentWillUnmount","render","div","img","polygonCancel","polygonFinishClosed","polygonFinishOpen","polygonToolStyle","ref","DOM","trigger","display","className","style","onClick","src","imageURLPrefix","module","exports"],"mappings":"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","sourcesContent":["var React, StrokeWidthPicker, createSetStateOnEventMixin, defineOptionsStyle;\n\nReact = require('../reactGUI/React-shim');\n\ndefineOptionsStyle = require('./optionsStyles').defineOptionsStyle;\n\nStrokeWidthPicker = React.createFactory(require('../reactGUI/StrokeWidthPicker'));\n\ncreateSetStateOnEventMixin = require('../reactGUI/createSetStateOnEventMixin');\n\ndefineOptionsStyle('polygon-and-stroke-width', React.createClass({\n  displayName: 'PolygonAndStrokeWidth',\n  getState: function() {\n    return {\n      strokeWidth: this.props.tool.strokeWidth,\n      inProgress: false\n    };\n  },\n  getInitialState: function() {\n    return this.getState();\n  },\n  mixins: [createSetStateOnEventMixin('toolChange')],\n  componentDidMount: function() {\n    var hidePolygonTools, showPolygonTools, unsubscribeFuncs;\n    unsubscribeFuncs = [];\n    this.unsubscribe = (function(_this) {\n      return function() {\n        var func, i, len, results;\n        results = [];\n        for (i = 0, len = unsubscribeFuncs.length; i < len; i++) {\n          func = unsubscribeFuncs[i];\n          results.push(func());\n        }\n        return results;\n      };\n    })(this);\n    showPolygonTools = (function(_this) {\n      return function() {\n        if (!_this.state.inProgress) {\n          return _this.setState({\n            inProgress: true\n          });\n        }\n      };\n    })(this);\n    hidePolygonTools = (function(_this) {\n      return function() {\n        return _this.setState({\n          inProgress: false\n        });\n      };\n    })(this);\n    unsubscribeFuncs.push(this.props.lc.on('lc-polygon-started', showPolygonTools));\n    return unsubscribeFuncs.push(this.props.lc.on('lc-polygon-stopped', hidePolygonTools));\n  },\n  componentWillUnmount: function() {\n    return this.unsubscribe();\n  },\n  render: function() {\n    var div, img, lc, polygonCancel, polygonFinishClosed, polygonFinishOpen, polygonToolStyle, ref;\n    lc = this.props.lc;\n    ref = React.DOM, div = ref.div, img = ref.img;\n    polygonFinishOpen = (function(_this) {\n      return function() {\n        return lc.trigger('lc-polygon-finishopen');\n      };\n    })(this);\n    polygonFinishClosed = (function(_this) {\n      return function() {\n        return lc.trigger('lc-polygon-finishclosed');\n      };\n    })(this);\n    polygonCancel = (function(_this) {\n      return function() {\n        return lc.trigger('lc-polygon-cancel');\n      };\n    })(this);\n    polygonToolStyle = {};\n    if (!this.state.inProgress) {\n      polygonToolStyle = {\n        display: 'none'\n      };\n    }\n    return div({}, div({\n      className: 'polygon-toolbar horz-toolbar',\n      style: polygonToolStyle\n    }, div({\n      className: 'square-toolbar-button',\n      onClick: polygonFinishOpen\n    }, img({\n      src: this.props.imageURLPrefix + \"/polygon-open.png\"\n    })), div({\n      className: 'square-toolbar-button',\n      onClick: polygonFinishClosed\n    }, img({\n      src: this.props.imageURLPrefix + \"/polygon-closed.png\"\n    })), div({\n      className: 'square-toolbar-button',\n      onClick: polygonCancel\n    }, img({\n      src: this.props.imageURLPrefix + \"/polygon-cancel.png\"\n    }))), div({}, StrokeWidthPicker({\n      tool: this.props.tool,\n      lc: this.props.lc\n    })));\n  }\n}));\n\nmodule.exports = {};\n"]},"metadata":{},"sourceType":"script"}