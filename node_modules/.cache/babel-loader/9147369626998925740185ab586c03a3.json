{"ast":null,"code":"var _jsxFileName = \"/Users/lebowitz/Desktop/calHackathon/covid/src/components/edit-post.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nexport default class EditPost extends Component {\n  constructor(props) {\n    super(props); //ensures that the this called in the methods are the same this in the class\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChangeDiagnosis = this.onChangeDiagnosis.bind(this);\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.draw = this.draw.bind(this);\n    this.createGraphData = this.createGraphData.bind(this);\n    this.findGraphKeys = this.findGraphKeys.bind(this);\n    this.randomColor = this.randomColor.bind(this); //state is how you create vars in react\n\n    this.state = {\n      username: '',\n      description: '',\n      date: new Date(),\n      file: '',\n      positive: false,\n      loading: true,\n      beginX: 0,\n      beginY: 0,\n      data: '',\n      lineKeys: [],\n      boxes: []\n    };\n  }\n\n  createGraphData(jsonDataStr) {\n    var cleanedString = jsonDataStr.replace(/\\'/gi, '');\n    var jsonData = JSON.parse(cleanedString);\n    return jsonData;\n  }\n\n  findGraphKeys(jsonDataStr) {\n    var cleanedString = jsonDataStr.replace(/\\'/gi, '');\n    var jsonData = JSON.parse(cleanedString);\n    var lineKeysTemp = [];\n\n    for (var key of Object.keys(jsonData[0])) {\n      lineKeysTemp.push(key);\n    }\n\n    return lineKeysTemp;\n  }\n\n  randomColor() {\n    const red = Math.random() * 230;\n    const green = Math.random() * 230;\n    const blue = Math.random() * 230;\n    return \"rgb(\" + red + \",\" + green + \",\" + blue + \")\";\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/posts/' + this.props.match.params.id).then(response => {\n      this.setState({\n        username: response.data.username,\n        description: response.data.description,\n        date: new Date(response.data.date),\n        file: response.data.file,\n        data: response.data.data,\n        lineKeys: response.data.data === \"PCR\" ? this.findGraphKeys(response.data.file) : [],\n        boxes: response.data.boxes\n      });\n\n      if (response.data.data == 'Image') {\n        this.setState({\n          height: response.data.height,\n          width: response.data.width\n        });\n        console.log(response.data.boxes);\n      }\n    });\n  }\n\n  onMouseDown(e) {\n    var canvas = this.refs.canvas;\n    let rect = canvas.getBoundingClientRect();\n    let x = e.clientX - rect.left;\n    let y = e.clientY - rect.top;\n    var context = canvas.getContext('2d');\n    this.setState({\n      beginX: x,\n      beginY: y\n    });\n  }\n\n  async onMouseUp(e) {\n    var canvas = this.refs.canvas;\n    let rect = canvas.getBoundingClientRect();\n    let x = e.clientX - rect.left;\n    let y = e.clientY - rect.top;\n    var context = canvas.getContext('2d');\n    var res = [];\n\n    for (var i = 0; i < this.state.boxes.length; i++) {\n      res.push(this.state.boxes[i]);\n    }\n\n    res.push({\n      x: this.state.beginX,\n      y: this.state.beginY,\n      width: Math.abs(this.state.beginX - x),\n      height: Math.abs(this.state.beginY - y)\n    });\n    await this.setState({\n      boxes: res\n    });\n    this.draw();\n  }\n\n  onChangeDiagnosis(e) {\n    var res = false;\n\n    if (e.target.value == 'Positive') {\n      res = true;\n    }\n\n    this.setState({\n      positive: res\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    console.log(this.state.boxes);\n    const post = {\n      username: this.state.username,\n      description: this.state.description,\n      date: this.state.date,\n      file: this.state.file,\n      complete: true,\n      positive: this.state.positive,\n      boxes: this.state.boxes\n    };\n    axios.post('http://localhost:5000/posts/update/' + this.props.match.params.id, post).then(res => console.log(res.data));\n    window.location = '/';\n  }\n\n  draw() {\n    if (this.state.data == 'Image') {\n      var canvas = this.refs.canvas;\n      var context = canvas.getContext('2d');\n      var imageObj = this.refs.image;\n\n      imageObj.onload = function () {\n        context.drawImage(imageObj, 0, 0);\n      };\n\n      for (var i = 0; i < this.state.boxes.length; i++) {\n        var box = this.state.boxes[i]; // the rectangle\n\n        context.beginPath();\n        context.rect(box.x, box.y, box.width, box.height);\n        context.closePath(); // the outline\n\n        context.lineWidth = 3;\n        context.strokeStyle = 'red';\n        context.stroke();\n      }\n    }\n  }\n\n  render() {\n    this.draw();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontFamily: \"sans-serif\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        fontSize: 30,\n        fontWeight: 600,\n        textDecoration: \"underline\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }\n    }, \"Please label the image!\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        fontSize: 20,\n        color: \"gray\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }, \"Task created by \", this.state.username)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }\n    }, \"Instructions: \", this.state.description)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }, \"Due Date: \", String(this.state.date))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }\n    }, this.state.data === \"PCR\" ? /*#__PURE__*/React.createElement(LineChart, {\n      width: 500,\n      height: 300,\n      data: this.createGraphData(this.state.file),\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      domain: [0, 45],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 15\n      }\n    }), this.state.lineKeys.map(label => /*#__PURE__*/React.createElement(Line, {\n      key: label,\n      type: \"monotone\",\n      dataKey: label,\n      stroke: label === \"Water\" ? \"rgb(20,20,20)\" : this.randomColor(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      onMouseMove: this.draw,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"canvas\",\n      height: this.state.height,\n      width: this.state.width,\n      onMouseDown: this.onMouseDown,\n      onMouseUp: this.onMouseUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      ref: \"image\",\n      src: this.state.file,\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }\n    }, \"Result: \"), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.onChangeDiagnosis,\n      defaultValue: 'Negative',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      key: \"Positive\",\n      value: \"Positive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }\n    }, \"Positive\"), /*#__PURE__*/React.createElement(\"option\", {\n      key: \"Negative\",\n      value: \"Negative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }\n    }, \"Negative\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit Task\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/lebowitz/Desktop/calHackathon/covid/src/components/edit-post.component.js"],"names":["React","Component","axios","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","EditPost","constructor","props","onSubmit","bind","onChangeDiagnosis","onMouseDown","onMouseUp","draw","createGraphData","findGraphKeys","randomColor","state","username","description","date","Date","file","positive","loading","beginX","beginY","data","lineKeys","boxes","jsonDataStr","cleanedString","replace","jsonData","JSON","parse","lineKeysTemp","key","Object","keys","push","red","Math","random","green","blue","componentDidMount","get","match","params","id","then","response","setState","height","width","console","log","e","canvas","refs","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","context","getContext","res","i","length","abs","target","value","preventDefault","post","complete","window","location","imageObj","image","onload","drawImage","box","beginPath","closePath","lineWidth","strokeStyle","stroke","render","fontFamily","fontSize","fontWeight","textDecoration","color","String","display","justifyContent","alignItems","right","bottom","map","label"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nexport default class EditPost extends Component {\n  constructor(props) {\n    super(props);\n    //ensures that the this called in the methods are the same this in the class\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChangeDiagnosis = this.onChangeDiagnosis.bind(this);\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.draw = this.draw.bind(this);\n    this.createGraphData = this.createGraphData.bind(this)\n    this.findGraphKeys = this.findGraphKeys.bind(this)\n    this.randomColor = this.randomColor.bind(this)\n    //state is how you create vars in react\n    this.state = {\n      username: '',\n      description: '',\n      date: new Date(),\n      file: '',\n      positive: false,\n      loading: true,\n      beginX: 0,\n      beginY: 0,\n      data: '',\n      lineKeys: [],\n      boxes: []\n    }\n  }\n\n  createGraphData(jsonDataStr){\n    var cleanedString = jsonDataStr.replace(/\\'/gi,'')\n    var jsonData = JSON.parse(cleanedString)\n    return jsonData\n  }\n\n  findGraphKeys(jsonDataStr){\n    var cleanedString = jsonDataStr.replace(/\\'/gi,'')\n    var jsonData = JSON.parse(cleanedString)\n    var lineKeysTemp = []\n    for (var key of Object.keys(jsonData[0])){\n      lineKeysTemp.push(key)\n    }\n    return lineKeysTemp\n  }\n\n  randomColor(){\n    const red = Math.random() * 230\n    const green = Math.random() * 230\n    const blue = Math.random() * 230\n    return \"rgb(\" + red + \",\" + green + \",\" + blue + \")\"\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/posts/' + this.props.match.params.id)\n      .then(response => {\n        this.setState({\n          username: response.data.username,\n          description: response.data.description,\n          date: new Date(response.data.date),\n          file: response.data.file,\n          data: response.data.data,\n          lineKeys: response.data.data === \"PCR\" ? this.findGraphKeys(response.data.file) : [],\n          boxes: response.data.boxes\n        })\n        if(response.data.data == 'Image') {\n          this.setState({\n            height: response.data.height,\n            width: response.data.width\n          });\n          console.log(response.data.boxes);\n        }\n      })\n  }\n  onMouseDown(e) {\n    var canvas = this.refs.canvas;\n    let rect = canvas.getBoundingClientRect();\n    let x = e.clientX - rect.left;\n    let y = e.clientY - rect.top;\n    var context = canvas.getContext('2d');\n    this.setState({beginX: x, beginY: y});\n  }\n  async onMouseUp(e) {\n    var canvas = this.refs.canvas;\n    let rect = canvas.getBoundingClientRect();\n    let x = e.clientX - rect.left;\n    let y = e.clientY - rect.top;\n    var context = canvas.getContext('2d');\n\n    var res = [];\n    for(var i = 0; i < this.state.boxes.length; i++) {\n        res.push(this.state.boxes[i]);\n    }\n    res.push({x: this.state.beginX,\n      y: this.state.beginY,\n      width: Math.abs(this.state.beginX - x),\n      height: Math.abs(this.state.beginY - y)})\n    await this.setState({boxes: res});\n    this.draw();\n  };\n  onChangeDiagnosis(e) {\n    var res = false;\n    if(e.target.value == 'Positive') {\n      res = true;\n    }\n    this.setState({\n      positive: res\n    });\n  }\n  onSubmit(e) {\n    e.preventDefault();\n    console.log(this.state.boxes)\n    const post = {\n      username: this.state.username,\n      description: this.state.description,\n      date: this.state.date,\n      file: this.state.file,\n      complete: true,\n      positive: this.state.positive,\n      boxes: this.state.boxes\n    }\n    axios.post('http://localhost:5000/posts/update/' + this.props.match.params.id, post)\n      .then(res => console.log(res.data));\n\n    window.location = '/';\n  }\n  draw() {\n    if(this.state.data == 'Image') {\n      var canvas = this.refs.canvas;\n      var context = canvas.getContext('2d');\n      var imageObj = this.refs.image;\n      imageObj.onload = function() {\n        context.drawImage(imageObj, 0, 0);\n      };\n      for(var i = 0; i < this.state.boxes.length; i++) {\n        var box = this.state.boxes[i];\n        // the rectangle\n        context.beginPath();\n        context.rect(box.x, box.y, box.width, box.height);\n        context.closePath();\n\n        // the outline\n        context.lineWidth = 3;\n        context.strokeStyle = 'red';\n        context.stroke();\n      }\n    }\n  }\n  render() {\n    this.draw()\n    return (\n    <div style={{fontFamily: \"sans-serif\"}}>\n      <label style={{fontSize: 30, fontWeight: 600, textDecoration: \"underline\"}}>Please label the image!</label>\n      <form onSubmit={this.onSubmit}>\n        <div className=\"form-group\">\n          <label style={{fontSize: 20, color: \"gray\"}}>Task created by {this.state.username}</label>\n        </div>\n        <div className=\"form-group\">\n          <p style={{}}>Instructions: {this.state.description}</p>\n        </div>\n        <div className=\"form-group\">\n          <label>Due Date: {String(this.state.date)}</label>\n        </div>\n        <div style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\n          {this.state.data === \"PCR\" ?\n            <LineChart\n              width={500}\n              height={300}\n              data={this.createGraphData(this.state.file)}\n              margin={{\n                top: 5, right: 30, left: 20, bottom: 5,\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" />\n              <YAxis domain={[0,45]}/>\n              <Tooltip />\n              <Legend />\n              {this.state.lineKeys.map(label =>\n                <Line key={label} type=\"monotone\" dataKey={label} stroke={label === \"Water\" ? \"rgb(20,20,20)\" : this.randomColor()} />\n              )}\n            </LineChart>\n          :\n            <div onMouseMove={this.draw}>\n              <canvas ref=\"canvas\" height={this.state.height}\n                width={this.state.width} onMouseDown={this.onMouseDown} onMouseUp={this.onMouseUp}\n              />\n              <img ref=\"image\" src={this.state.file} style={{display: 'none'}} />\n            </div>\n          }\n        </div>\n        <div>\n          <label>Result: </label>\n          <select onChange={this.onChangeDiagnosis} defaultValue={'Negative'}>\n            <option key='Positive' value='Positive'>Positive</option>\n            <option key='Negative' value='Negative'>Negative</option>\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <input type=\"submit\" value=\"Submit Task\" className=\"btn btn-primary\" />\n        </div>\n      </form>\n    </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}