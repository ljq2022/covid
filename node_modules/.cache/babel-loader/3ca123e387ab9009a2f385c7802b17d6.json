{"ast":null,"code":"var INFINITE,\n    JSONToShape,\n    LiterallyCanvas,\n    Pencil,\n    actions,\n    bindEvents,\n    createShape,\n    math,\n    ref,\n    renderShapeToContext,\n    renderShapeToSVG,\n    renderSnapshotToImage,\n    renderSnapshotToSVG,\n    shapeToJSON,\n    util,\n    bind = function (fn, me) {\n  return function () {\n    return fn.apply(me, arguments);\n  };\n},\n    slice = [].slice,\n    indexOf = [].indexOf || function (item) {\n  for (var i = 0, l = this.length; i < l; i++) {\n    if (i in this && this[i] === item) return i;\n  }\n\n  return -1;\n};\n\nactions = require('./actions');\nbindEvents = require('./bindEvents');\nmath = require('./math');\nref = require('./shapes'), createShape = ref.createShape, shapeToJSON = ref.shapeToJSON, JSONToShape = ref.JSONToShape;\nrenderShapeToContext = require('./canvasRenderer').renderShapeToContext;\nrenderShapeToSVG = require('./svgRenderer').renderShapeToSVG;\nrenderSnapshotToImage = require('./renderSnapshotToImage');\nrenderSnapshotToSVG = require('./renderSnapshotToSVG');\nPencil = require('../tools/Pencil');\nutil = require('./util');\nINFINITE = 'infinite';\n\nmodule.exports = LiterallyCanvas = function () {\n  function LiterallyCanvas(arg1, arg2) {\n    this.setImageSize = bind(this.setImageSize, this);\n    var containerEl, opts;\n    opts = null;\n    containerEl = null;\n\n    if (arg1 instanceof HTMLElement) {\n      containerEl = arg1;\n      opts = arg2;\n    } else {\n      opts = arg1;\n    }\n\n    this.opts = opts || {};\n    this.config = {\n      zoomMin: opts.zoomMin || 0.2,\n      zoomMax: opts.zoomMax || 4.0,\n      zoomStep: opts.zoomStep || 0.2\n    };\n    this.colors = {\n      primary: opts.primaryColor || '#000',\n      secondary: opts.secondaryColor || '#fff',\n      background: opts.backgroundColor || 'transparent'\n    };\n    this.watermarkImage = opts.watermarkImage;\n    this.watermarkScale = opts.watermarkScale || 1;\n    this.backgroundCanvas = document.createElement('canvas');\n    this.backgroundCtx = this.backgroundCanvas.getContext('2d');\n    this.canvas = document.createElement('canvas');\n    this.canvas.style['background-color'] = 'transparent';\n    this.buffer = document.createElement('canvas');\n    this.buffer.style['background-color'] = 'transparent';\n    this.ctx = this.canvas.getContext('2d');\n    this.bufferCtx = this.buffer.getContext('2d');\n    this.backingScale = util.getBackingScale(this.ctx);\n    this.backgroundShapes = opts.backgroundShapes || [];\n    this._shapesInProgress = [];\n    this.shapes = [];\n    this.undoStack = [];\n    this.redoStack = [];\n    this.isDragging = false;\n    this.position = {\n      x: 0,\n      y: 0\n    };\n    this.scale = 1.0;\n    this.setTool(new this.opts.tools[0](this));\n    this.width = opts.imageSize.width || INFINITE;\n    this.height = opts.imageSize.height || INFINITE;\n    this.setZoom(this.scale);\n\n    if (opts.snapshot) {\n      this.loadSnapshot(opts.snapshot);\n    }\n\n    this.isBound = false;\n\n    if (containerEl) {\n      this.bindToElement(containerEl);\n    }\n  }\n\n  LiterallyCanvas.prototype.bindToElement = function (containerEl) {\n    var ref1, repaintAll;\n\n    if (this.containerEl) {\n      console.warn(\"Trying to bind Literally Canvas to a DOM element more than once is unsupported.\");\n      return;\n    }\n\n    this.containerEl = containerEl;\n    this._unsubscribeEvents = bindEvents(this, this.containerEl, this.opts.keyboardShortcuts);\n    this.containerEl.style['background-color'] = this.colors.background;\n    this.containerEl.appendChild(this.backgroundCanvas);\n    this.containerEl.appendChild(this.canvas);\n    this.isBound = true;\n\n    repaintAll = function (_this) {\n      return function () {\n        _this.keepPanInImageBounds();\n\n        return _this.repaintAllLayers();\n      };\n    }(this);\n\n    util.matchElementSize(this.containerEl, [this.backgroundCanvas, this.canvas], this.backingScale, repaintAll);\n\n    if (this.watermarkImage) {\n      this.watermarkImage.onload = function (_this) {\n        return function () {\n          return _this.repaintLayer('background');\n        };\n      }(this);\n    }\n\n    if ((ref1 = this.tool) != null) {\n      ref1.didBecomeActive(this);\n    }\n\n    return repaintAll();\n  };\n\n  LiterallyCanvas.prototype._teardown = function () {\n    this.tool.willBecomeInactive(this);\n\n    if (typeof this._unsubscribeEvents === \"function\") {\n      this._unsubscribeEvents();\n    }\n\n    this.tool = null;\n    this.containerEl = null;\n    return this.isBound = false;\n  };\n\n  LiterallyCanvas.prototype.trigger = function (name, data) {\n    this.canvas.dispatchEvent(new CustomEvent(name, {\n      detail: data\n    }));\n    return null;\n  };\n\n  LiterallyCanvas.prototype.on = function (name, fn) {\n    var wrapper;\n\n    wrapper = function (e) {\n      return fn(e.detail);\n    };\n\n    this.canvas.addEventListener(name, wrapper);\n    return function (_this) {\n      return function () {\n        return _this.canvas.removeEventListener(name, wrapper);\n      };\n    }(this);\n  };\n\n  LiterallyCanvas.prototype.getRenderScale = function () {\n    return this.scale * this.backingScale;\n  };\n\n  LiterallyCanvas.prototype.clientCoordsToDrawingCoords = function (x, y) {\n    return {\n      x: (x * this.backingScale - this.position.x) / this.getRenderScale(),\n      y: (y * this.backingScale - this.position.y) / this.getRenderScale()\n    };\n  };\n\n  LiterallyCanvas.prototype.drawingCoordsToClientCoords = function (x, y) {\n    return {\n      x: x * this.getRenderScale() + this.position.x,\n      y: y * this.getRenderScale() + this.position.y\n    };\n  };\n\n  LiterallyCanvas.prototype.setImageSize = function (width, height) {\n    this.width = width || INFINITE;\n    this.height = height || INFINITE;\n    this.keepPanInImageBounds();\n    this.repaintAllLayers();\n    return this.trigger('imageSizeChange', {\n      width: this.width,\n      height: this.height\n    });\n  };\n\n  LiterallyCanvas.prototype.setTool = function (tool) {\n    var ref1;\n\n    if (this.isBound) {\n      if ((ref1 = this.tool) != null) {\n        ref1.willBecomeInactive(this);\n      }\n    }\n\n    this.tool = tool;\n    this.trigger('toolChange', {\n      tool: tool\n    });\n\n    if (this.isBound) {\n      return this.tool.didBecomeActive(this);\n    }\n  };\n\n  LiterallyCanvas.prototype.setShapesInProgress = function (newVal) {\n    return this._shapesInProgress = newVal;\n  };\n\n  LiterallyCanvas.prototype.pointerDown = function (x, y) {\n    var p;\n    p = this.clientCoordsToDrawingCoords(x, y);\n\n    if (this.tool.usesSimpleAPI) {\n      this.tool.begin(p.x, p.y, this);\n      this.isDragging = true;\n      return this.trigger(\"drawStart\", {\n        tool: this.tool\n      });\n    } else {\n      this.isDragging = true;\n      return this.trigger(\"lc-pointerdown\", {\n        tool: this.tool,\n        x: p.x,\n        y: p.y,\n        rawX: x,\n        rawY: y\n      });\n    }\n  };\n\n  LiterallyCanvas.prototype.pointerMove = function (x, y) {\n    return util.requestAnimationFrame(function (_this) {\n      return function () {\n        var p, ref1;\n        p = _this.clientCoordsToDrawingCoords(x, y);\n\n        if ((ref1 = _this.tool) != null ? ref1.usesSimpleAPI : void 0) {\n          if (_this.isDragging) {\n            _this.tool[\"continue\"](p.x, p.y, _this);\n\n            return _this.trigger(\"drawContinue\", {\n              tool: _this.tool\n            });\n          }\n        } else {\n          if (_this.isDragging) {\n            return _this.trigger(\"lc-pointerdrag\", {\n              tool: _this.tool,\n              x: p.x,\n              y: p.y,\n              rawX: x,\n              rawY: y\n            });\n          } else {\n            return _this.trigger(\"lc-pointermove\", {\n              tool: _this.tool,\n              x: p.x,\n              y: p.y,\n              rawX: x,\n              rawY: y\n            });\n          }\n        }\n      };\n    }(this));\n  };\n\n  LiterallyCanvas.prototype.pointerUp = function (x, y) {\n    var p;\n    p = this.clientCoordsToDrawingCoords(x, y);\n\n    if (this.tool.usesSimpleAPI) {\n      if (this.isDragging) {\n        this.tool.end(p.x, p.y, this);\n        this.isDragging = false;\n        return this.trigger(\"drawEnd\", {\n          tool: this.tool\n        });\n      }\n    } else {\n      this.isDragging = false;\n      return this.trigger(\"lc-pointerup\", {\n        tool: this.tool,\n        x: p.x,\n        y: p.y,\n        rawX: x,\n        rawY: y\n      });\n    }\n  };\n\n  LiterallyCanvas.prototype.setColor = function (name, color) {\n    this.colors[name] = color;\n\n    if (!this.isBound) {\n      return;\n    }\n\n    switch (name) {\n      case 'background':\n        this.containerEl.style.backgroundColor = this.colors.background;\n        this.repaintLayer('background');\n        break;\n\n      case 'primary':\n        this.repaintLayer('main');\n        break;\n\n      case 'secondary':\n        this.repaintLayer('main');\n    }\n\n    this.trigger(name + \"ColorChange\", this.colors[name]);\n\n    if (name === 'background') {\n      return this.trigger(\"drawingChange\");\n    }\n  };\n\n  LiterallyCanvas.prototype.getColor = function (name) {\n    return this.colors[name];\n  };\n\n  LiterallyCanvas.prototype.saveShape = function (shape, triggerShapeSaveEvent, previousShapeId) {\n    if (triggerShapeSaveEvent == null) {\n      triggerShapeSaveEvent = true;\n    }\n\n    if (previousShapeId == null) {\n      previousShapeId = null;\n    }\n\n    if (!previousShapeId) {\n      previousShapeId = this.shapes.length ? this.shapes[this.shapes.length - 1].id : null;\n    }\n\n    this.execute(new actions.AddShapeAction(this, shape, previousShapeId));\n\n    if (triggerShapeSaveEvent) {\n      this.trigger('shapeSave', {\n        shape: shape,\n        previousShapeId: previousShapeId\n      });\n    }\n\n    return this.trigger('drawingChange');\n  };\n\n  LiterallyCanvas.prototype.pan = function (x, y) {\n    return this.setPan(this.position.x - x, this.position.y - y);\n  };\n\n  LiterallyCanvas.prototype.keepPanInImageBounds = function () {\n    var ref1, renderScale, x, y;\n    renderScale = this.getRenderScale();\n    ref1 = this.position, x = ref1.x, y = ref1.y;\n\n    if (this.width !== INFINITE) {\n      if (this.canvas.width > this.width * renderScale) {\n        x = (this.canvas.width - this.width * renderScale) / 2;\n      } else {\n        x = Math.max(Math.min(0, x), this.canvas.width - this.width * renderScale);\n      }\n    }\n\n    if (this.height !== INFINITE) {\n      if (this.canvas.height > this.height * renderScale) {\n        y = (this.canvas.height - this.height * renderScale) / 2;\n      } else {\n        y = Math.max(Math.min(0, y), this.canvas.height - this.height * renderScale);\n      }\n    }\n\n    return this.position = {\n      x: x,\n      y: y\n    };\n  };\n\n  LiterallyCanvas.prototype.setPan = function (x, y) {\n    this.position = {\n      x: x,\n      y: y\n    };\n    this.keepPanInImageBounds();\n    this.repaintAllLayers();\n    return this.trigger('pan', {\n      x: this.position.x,\n      y: this.position.y\n    });\n  };\n\n  LiterallyCanvas.prototype.zoom = function (factor) {\n    var newScale;\n    newScale = this.scale + factor;\n    newScale = Math.max(newScale, this.config.zoomMin);\n    newScale = Math.min(newScale, this.config.zoomMax);\n    newScale = Math.round(newScale * 100) / 100;\n    return this.setZoom(newScale);\n  };\n\n  LiterallyCanvas.prototype.setZoom = function (scale) {\n    var oldScale;\n    oldScale = this.scale;\n    this.scale = scale;\n    this.position.x = math.scalePositionScalar(this.position.x, this.canvas.width, oldScale, this.scale);\n    this.position.y = math.scalePositionScalar(this.position.y, this.canvas.height, oldScale, this.scale);\n    this.keepPanInImageBounds();\n    this.repaintAllLayers();\n    return this.trigger('zoom', {\n      oldScale: oldScale,\n      newScale: this.scale\n    });\n  };\n\n  LiterallyCanvas.prototype.setWatermarkImage = function (newImage) {\n    this.watermarkImage = newImage;\n    util.addImageOnload(newImage, function (_this) {\n      return function () {\n        return _this.repaintLayer('background');\n      };\n    }(this));\n\n    if (newImage.width) {\n      return this.repaintLayer('background');\n    }\n  };\n\n  LiterallyCanvas.prototype.repaintAllLayers = function () {\n    var i, key, len, ref1;\n    ref1 = ['background', 'main'];\n\n    for (i = 0, len = ref1.length; i < len; i++) {\n      key = ref1[i];\n      this.repaintLayer(key);\n    }\n\n    return null;\n  };\n\n  LiterallyCanvas.prototype.repaintLayer = function (repaintLayerKey, dirty) {\n    var retryCallback;\n\n    if (dirty == null) {\n      dirty = repaintLayerKey === 'main';\n    }\n\n    if (!this.isBound) {\n      return;\n    }\n\n    switch (repaintLayerKey) {\n      case 'background':\n        this.backgroundCtx.clearRect(0, 0, this.backgroundCanvas.width, this.backgroundCanvas.height);\n\n        retryCallback = function (_this) {\n          return function () {\n            return _this.repaintLayer('background');\n          };\n        }(this);\n\n        if (this.watermarkImage) {\n          this._renderWatermark(this.backgroundCtx, true, retryCallback);\n        }\n\n        this.draw(this.backgroundShapes, this.backgroundCtx, retryCallback);\n        break;\n\n      case 'main':\n        retryCallback = function (_this) {\n          return function () {\n            return _this.repaintLayer('main', true);\n          };\n        }(this);\n\n        if (dirty) {\n          this.buffer.width = this.canvas.width;\n          this.buffer.height = this.canvas.height;\n          this.bufferCtx.clearRect(0, 0, this.buffer.width, this.buffer.height);\n          this.draw(this.shapes, this.bufferCtx, retryCallback);\n        }\n\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n        if (this.canvas.width > 0 && this.canvas.height > 0) {\n          this.ctx.fillStyle = '#ccc';\n          this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n          this.clipped(function (_this) {\n            return function () {\n              _this.ctx.clearRect(0, 0, _this.canvas.width, _this.canvas.height);\n\n              return _this.ctx.drawImage(_this.buffer, 0, 0);\n            };\n          }(this), this.ctx);\n          this.clipped(function (_this) {\n            return function () {\n              return _this.transformed(function () {\n                var i, len, ref1, results, shape;\n                ref1 = _this._shapesInProgress;\n                results = [];\n\n                for (i = 0, len = ref1.length; i < len; i++) {\n                  shape = ref1[i];\n                  results.push(renderShapeToContext(_this.ctx, shape, {\n                    bufferCtx: _this.bufferCtx,\n                    shouldOnlyDrawLatest: true\n                  }));\n                }\n\n                return results;\n              }, _this.ctx, _this.bufferCtx);\n            };\n          }(this), this.ctx, this.bufferCtx);\n        }\n\n    }\n\n    return this.trigger('repaint', {\n      layerKey: repaintLayerKey\n    });\n  };\n\n  LiterallyCanvas.prototype._renderWatermark = function (ctx, worryAboutRetina, retryCallback) {\n    if (worryAboutRetina == null) {\n      worryAboutRetina = true;\n    }\n\n    if (!this.watermarkImage.width) {\n      this.watermarkImage.onload = retryCallback;\n      return;\n    }\n\n    ctx.save();\n    ctx.translate(ctx.canvas.width / 2, ctx.canvas.height / 2);\n    ctx.scale(this.watermarkScale, this.watermarkScale);\n\n    if (worryAboutRetina) {\n      ctx.scale(this.backingScale, this.backingScale);\n    }\n\n    ctx.drawImage(this.watermarkImage, -this.watermarkImage.width / 2, -this.watermarkImage.height / 2);\n    return ctx.restore();\n  };\n\n  LiterallyCanvas.prototype.drawShapeInProgress = function (shape) {\n    this.repaintLayer('main', false);\n    return this.clipped(function (_this) {\n      return function () {\n        return _this.transformed(function () {\n          return renderShapeToContext(_this.ctx, shape, {\n            bufferCtx: _this.bufferCtx,\n            shouldOnlyDrawLatest: true\n          });\n        }, _this.ctx, _this.bufferCtx);\n      };\n    }(this), this.ctx, this.bufferCtx);\n  };\n\n  LiterallyCanvas.prototype.draw = function (shapes, ctx, retryCallback) {\n    var drawShapes;\n\n    if (!shapes.length) {\n      return;\n    }\n\n    drawShapes = function (_this) {\n      return function () {\n        var i, len, results, shape;\n        results = [];\n\n        for (i = 0, len = shapes.length; i < len; i++) {\n          shape = shapes[i];\n          results.push(renderShapeToContext(ctx, shape, {\n            retryCallback: retryCallback\n          }));\n        }\n\n        return results;\n      };\n    }(this);\n\n    return this.clipped(function (_this) {\n      return function () {\n        return _this.transformed(drawShapes, ctx);\n      };\n    }(this), ctx);\n  };\n\n  LiterallyCanvas.prototype.clipped = function () {\n    var contexts, ctx, fn, height, i, j, len, len1, results, width, x, y;\n    fn = arguments[0], contexts = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    x = this.width === INFINITE ? 0 : this.position.x;\n    y = this.height === INFINITE ? 0 : this.position.y;\n\n    width = function () {\n      switch (this.width) {\n        case INFINITE:\n          return this.canvas.width;\n\n        default:\n          return this.width * this.getRenderScale();\n      }\n    }.call(this);\n\n    height = function () {\n      switch (this.height) {\n        case INFINITE:\n          return this.canvas.height;\n\n        default:\n          return this.height * this.getRenderScale();\n      }\n    }.call(this);\n\n    for (i = 0, len = contexts.length; i < len; i++) {\n      ctx = contexts[i];\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(x, y, width, height);\n      ctx.clip();\n    }\n\n    fn();\n    results = [];\n\n    for (j = 0, len1 = contexts.length; j < len1; j++) {\n      ctx = contexts[j];\n      results.push(ctx.restore());\n    }\n\n    return results;\n  };\n\n  LiterallyCanvas.prototype.transformed = function () {\n    var contexts, ctx, fn, i, j, len, len1, results, scale;\n    fn = arguments[0], contexts = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n\n    for (i = 0, len = contexts.length; i < len; i++) {\n      ctx = contexts[i];\n      ctx.save();\n      ctx.translate(Math.floor(this.position.x), Math.floor(this.position.y));\n      scale = this.getRenderScale();\n      ctx.scale(scale, scale);\n    }\n\n    fn();\n    results = [];\n\n    for (j = 0, len1 = contexts.length; j < len1; j++) {\n      ctx = contexts[j];\n      results.push(ctx.restore());\n    }\n\n    return results;\n  };\n\n  LiterallyCanvas.prototype.clear = function (triggerClearEvent) {\n    var newShapes, oldShapes;\n\n    if (triggerClearEvent == null) {\n      triggerClearEvent = true;\n    }\n\n    oldShapes = this.shapes;\n    newShapes = [];\n    this.setShapesInProgress([]);\n    this.execute(new actions.ClearAction(this, oldShapes, newShapes));\n    this.repaintLayer('main');\n\n    if (triggerClearEvent) {\n      this.trigger('clear', null);\n    }\n\n    return this.trigger('drawingChange', {});\n  };\n\n  LiterallyCanvas.prototype.execute = function (action) {\n    this.undoStack.push(action);\n    action[\"do\"]();\n    return this.redoStack = [];\n  };\n\n  LiterallyCanvas.prototype.undo = function () {\n    var action;\n\n    if (!this.undoStack.length) {\n      return;\n    }\n\n    action = this.undoStack.pop();\n    action.undo();\n    this.redoStack.push(action);\n    this.trigger('undo', {\n      action: action\n    });\n    return this.trigger('drawingChange', {});\n  };\n\n  LiterallyCanvas.prototype.redo = function () {\n    var action;\n\n    if (!this.redoStack.length) {\n      return;\n    }\n\n    action = this.redoStack.pop();\n    this.undoStack.push(action);\n    action[\"do\"]();\n    this.trigger('redo', {\n      action: action\n    });\n    return this.trigger('drawingChange', {});\n  };\n\n  LiterallyCanvas.prototype.canUndo = function () {\n    return !!this.undoStack.length;\n  };\n\n  LiterallyCanvas.prototype.canRedo = function () {\n    return !!this.redoStack.length;\n  };\n\n  LiterallyCanvas.prototype.getPixel = function (x, y) {\n    var p, pixel;\n    p = this.drawingCoordsToClientCoords(x, y);\n    pixel = this.ctx.getImageData(p.x, p.y, 1, 1).data;\n\n    if (pixel[3]) {\n      return \"rgb(\" + pixel[0] + \", \" + pixel[1] + \", \" + pixel[2] + \")\";\n    } else {\n      return null;\n    }\n  };\n\n  LiterallyCanvas.prototype.getContentBounds = function () {\n    return util.getBoundingRect(this.shapes.concat(this.backgroundShapes).map(function (s) {\n      return s.getBoundingRect();\n    }), this.width === INFINITE ? 0 : this.width, this.height === INFINITE ? 0 : this.height);\n  };\n\n  LiterallyCanvas.prototype.getDefaultImageRect = function (explicitSize, margin) {\n    var s;\n\n    if (explicitSize == null) {\n      explicitSize = {\n        width: 0,\n        height: 0\n      };\n    }\n\n    if (margin == null) {\n      margin = {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      };\n    }\n\n    return util.getDefaultImageRect(function () {\n      var i, len, ref1, results;\n      ref1 = this.shapes.concat(this.backgroundShapes);\n      results = [];\n\n      for (i = 0, len = ref1.length; i < len; i++) {\n        s = ref1[i];\n        results.push(s.getBoundingRect(this.ctx));\n      }\n\n      return results;\n    }.call(this), explicitSize, margin);\n  };\n\n  LiterallyCanvas.prototype.getImage = function (opts) {\n    if (opts == null) {\n      opts = {};\n    }\n\n    if (opts.includeWatermark == null) {\n      opts.includeWatermark = true;\n    }\n\n    if (opts.scaleDownRetina == null) {\n      opts.scaleDownRetina = true;\n    }\n\n    if (opts.scale == null) {\n      opts.scale = 1;\n    }\n\n    if (!opts.scaleDownRetina) {\n      opts.scale *= this.backingScale;\n    }\n\n    if (opts.includeWatermark) {\n      opts.watermarkImage = this.watermarkImage;\n      opts.watermarkScale = this.watermarkScale;\n\n      if (!opts.scaleDownRetina) {\n        opts.watermarkScale *= this.backingScale;\n      }\n    }\n\n    return renderSnapshotToImage(this.getSnapshot(), opts);\n  };\n\n  LiterallyCanvas.prototype.canvasForExport = function () {\n    this.repaintAllLayers();\n    return util.combineCanvases(this.backgroundCanvas, this.canvas);\n  };\n\n  LiterallyCanvas.prototype.canvasWithBackground = function (backgroundImageOrCanvas) {\n    return util.combineCanvases(backgroundImageOrCanvas, this.canvasForExport());\n  };\n\n  LiterallyCanvas.prototype.getSnapshot = function (keys) {\n    var i, k, len, ref1, shape, snapshot;\n\n    if (keys == null) {\n      keys = null;\n    }\n\n    if (keys == null) {\n      keys = ['shapes', 'imageSize', 'colors', 'position', 'scale', 'backgroundShapes'];\n    }\n\n    snapshot = {};\n    ref1 = ['colors', 'position', 'scale'];\n\n    for (i = 0, len = ref1.length; i < len; i++) {\n      k = ref1[i];\n\n      if (indexOf.call(keys, k) >= 0) {\n        snapshot[k] = this[k];\n      }\n    }\n\n    if (indexOf.call(keys, 'shapes') >= 0) {\n      snapshot.shapes = function () {\n        var j, len1, ref2, results;\n        ref2 = this.shapes;\n        results = [];\n\n        for (j = 0, len1 = ref2.length; j < len1; j++) {\n          shape = ref2[j];\n          results.push(shapeToJSON(shape));\n        }\n\n        return results;\n      }.call(this);\n    }\n\n    if (indexOf.call(keys, 'backgroundShapes') >= 0) {\n      snapshot.backgroundShapes = function () {\n        var j, len1, ref2, results;\n        ref2 = this.backgroundShapes;\n        results = [];\n\n        for (j = 0, len1 = ref2.length; j < len1; j++) {\n          shape = ref2[j];\n          results.push(shapeToJSON(shape));\n        }\n\n        return results;\n      }.call(this);\n    }\n\n    if (indexOf.call(keys, 'imageSize') >= 0) {\n      snapshot.imageSize = {\n        width: this.width,\n        height: this.height\n      };\n    }\n\n    return snapshot;\n  };\n\n  LiterallyCanvas.prototype.getSnapshotJSON = function () {\n    console.warn(\"lc.getSnapshotJSON() is deprecated. use JSON.stringify(lc.getSnapshot()) instead.\");\n    return JSON.stringify(this.getSnapshot());\n  };\n\n  LiterallyCanvas.prototype.getSVGString = function (opts) {\n    if (opts == null) {\n      opts = {};\n    }\n\n    return renderSnapshotToSVG(this.getSnapshot(), opts);\n  };\n\n  LiterallyCanvas.prototype.loadSnapshot = function (snapshot) {\n    var i, j, k, len, len1, ref1, ref2, s, shape, shapeRepr;\n\n    if (!snapshot) {\n      return;\n    }\n\n    if (snapshot.colors) {\n      ref1 = ['primary', 'secondary', 'background'];\n\n      for (i = 0, len = ref1.length; i < len; i++) {\n        k = ref1[i];\n        this.setColor(k, snapshot.colors[k]);\n      }\n    }\n\n    if (snapshot.shapes) {\n      this.shapes = [];\n      ref2 = snapshot.shapes;\n\n      for (j = 0, len1 = ref2.length; j < len1; j++) {\n        shapeRepr = ref2[j];\n        shape = JSONToShape(shapeRepr);\n\n        if (shape) {\n          this.execute(new actions.AddShapeAction(this, shape));\n        }\n      }\n    }\n\n    if (snapshot.backgroundShapes) {\n      this.backgroundShapes = function () {\n        var l, len2, ref3, results;\n        ref3 = snapshot.backgroundShapes;\n        results = [];\n\n        for (l = 0, len2 = ref3.length; l < len2; l++) {\n          s = ref3[l];\n          results.push(JSONToShape(s));\n        }\n\n        return results;\n      }();\n    }\n\n    if (snapshot.imageSize) {\n      this.width = snapshot.imageSize.width;\n      this.height = snapshot.imageSize.height;\n    }\n\n    if (snapshot.position) {\n      this.position = snapshot.position;\n    }\n\n    if (snapshot.scale) {\n      this.scale = snapshot.scale;\n    }\n\n    this.repaintAllLayers();\n    this.trigger('snapshotLoad');\n    return this.trigger('drawingChange', {});\n  };\n\n  LiterallyCanvas.prototype.loadSnapshotJSON = function (str) {\n    console.warn(\"lc.loadSnapshotJSON() is deprecated. use lc.loadSnapshot(JSON.parse(snapshot)) instead.\");\n    return this.loadSnapshot(JSON.parse(str));\n  };\n\n  return LiterallyCanvas;\n}();","map":{"version":3,"sources":["C:/Users/lukeq/blog/node_modules/literallycanvas/lib/js/core/LiterallyCanvas.js"],"names":["INFINITE","JSONToShape","LiterallyCanvas","Pencil","actions","bindEvents","createShape","math","ref","renderShapeToContext","renderShapeToSVG","renderSnapshotToImage","renderSnapshotToSVG","shapeToJSON","util","bind","fn","me","apply","arguments","slice","indexOf","item","i","l","length","require","module","exports","arg1","arg2","setImageSize","containerEl","opts","HTMLElement","config","zoomMin","zoomMax","zoomStep","colors","primary","primaryColor","secondary","secondaryColor","background","backgroundColor","watermarkImage","watermarkScale","backgroundCanvas","document","createElement","backgroundCtx","getContext","canvas","style","buffer","ctx","bufferCtx","backingScale","getBackingScale","backgroundShapes","_shapesInProgress","shapes","undoStack","redoStack","isDragging","position","x","y","scale","setTool","tools","width","imageSize","height","setZoom","snapshot","loadSnapshot","isBound","bindToElement","prototype","ref1","repaintAll","console","warn","_unsubscribeEvents","keyboardShortcuts","appendChild","_this","keepPanInImageBounds","repaintAllLayers","matchElementSize","onload","repaintLayer","tool","didBecomeActive","_teardown","willBecomeInactive","trigger","name","data","dispatchEvent","CustomEvent","detail","on","wrapper","e","addEventListener","removeEventListener","getRenderScale","clientCoordsToDrawingCoords","drawingCoordsToClientCoords","setShapesInProgress","newVal","pointerDown","p","usesSimpleAPI","begin","rawX","rawY","pointerMove","requestAnimationFrame","pointerUp","end","setColor","color","getColor","saveShape","shape","triggerShapeSaveEvent","previousShapeId","id","execute","AddShapeAction","pan","setPan","renderScale","Math","max","min","zoom","factor","newScale","round","oldScale","scalePositionScalar","setWatermarkImage","newImage","addImageOnload","key","len","repaintLayerKey","dirty","retryCallback","clearRect","_renderWatermark","draw","fillStyle","fillRect","clipped","drawImage","transformed","results","push","shouldOnlyDrawLatest","layerKey","worryAboutRetina","save","translate","restore","drawShapeInProgress","drawShapes","contexts","j","len1","call","beginPath","rect","clip","floor","clear","triggerClearEvent","newShapes","oldShapes","ClearAction","action","undo","pop","redo","canUndo","canRedo","getPixel","pixel","getImageData","getContentBounds","getBoundingRect","concat","map","s","getDefaultImageRect","explicitSize","margin","top","right","bottom","left","getImage","includeWatermark","scaleDownRetina","getSnapshot","canvasForExport","combineCanvases","canvasWithBackground","backgroundImageOrCanvas","keys","k","ref2","getSnapshotJSON","JSON","stringify","getSVGString","shapeRepr","len2","ref3","loadSnapshotJSON","str","parse"],"mappings":"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","sourcesContent":["var INFINITE, JSONToShape, LiterallyCanvas, Pencil, actions, bindEvents, createShape, math, ref, renderShapeToContext, renderShapeToSVG, renderSnapshotToImage, renderSnapshotToSVG, shapeToJSON, util,\n  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  slice = [].slice,\n  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\nactions = require('./actions');\n\nbindEvents = require('./bindEvents');\n\nmath = require('./math');\n\nref = require('./shapes'), createShape = ref.createShape, shapeToJSON = ref.shapeToJSON, JSONToShape = ref.JSONToShape;\n\nrenderShapeToContext = require('./canvasRenderer').renderShapeToContext;\n\nrenderShapeToSVG = require('./svgRenderer').renderShapeToSVG;\n\nrenderSnapshotToImage = require('./renderSnapshotToImage');\n\nrenderSnapshotToSVG = require('./renderSnapshotToSVG');\n\nPencil = require('../tools/Pencil');\n\nutil = require('./util');\n\nINFINITE = 'infinite';\n\nmodule.exports = LiterallyCanvas = (function() {\n  function LiterallyCanvas(arg1, arg2) {\n    this.setImageSize = bind(this.setImageSize, this);\n    var containerEl, opts;\n    opts = null;\n    containerEl = null;\n    if (arg1 instanceof HTMLElement) {\n      containerEl = arg1;\n      opts = arg2;\n    } else {\n      opts = arg1;\n    }\n    this.opts = opts || {};\n    this.config = {\n      zoomMin: opts.zoomMin || 0.2,\n      zoomMax: opts.zoomMax || 4.0,\n      zoomStep: opts.zoomStep || 0.2\n    };\n    this.colors = {\n      primary: opts.primaryColor || '#000',\n      secondary: opts.secondaryColor || '#fff',\n      background: opts.backgroundColor || 'transparent'\n    };\n    this.watermarkImage = opts.watermarkImage;\n    this.watermarkScale = opts.watermarkScale || 1;\n    this.backgroundCanvas = document.createElement('canvas');\n    this.backgroundCtx = this.backgroundCanvas.getContext('2d');\n    this.canvas = document.createElement('canvas');\n    this.canvas.style['background-color'] = 'transparent';\n    this.buffer = document.createElement('canvas');\n    this.buffer.style['background-color'] = 'transparent';\n    this.ctx = this.canvas.getContext('2d');\n    this.bufferCtx = this.buffer.getContext('2d');\n    this.backingScale = util.getBackingScale(this.ctx);\n    this.backgroundShapes = opts.backgroundShapes || [];\n    this._shapesInProgress = [];\n    this.shapes = [];\n    this.undoStack = [];\n    this.redoStack = [];\n    this.isDragging = false;\n    this.position = {\n      x: 0,\n      y: 0\n    };\n    this.scale = 1.0;\n    this.setTool(new this.opts.tools[0](this));\n    this.width = opts.imageSize.width || INFINITE;\n    this.height = opts.imageSize.height || INFINITE;\n    this.setZoom(this.scale);\n    if (opts.snapshot) {\n      this.loadSnapshot(opts.snapshot);\n    }\n    this.isBound = false;\n    if (containerEl) {\n      this.bindToElement(containerEl);\n    }\n  }\n\n  LiterallyCanvas.prototype.bindToElement = function(containerEl) {\n    var ref1, repaintAll;\n    if (this.containerEl) {\n      console.warn(\"Trying to bind Literally Canvas to a DOM element more than once is unsupported.\");\n      return;\n    }\n    this.containerEl = containerEl;\n    this._unsubscribeEvents = bindEvents(this, this.containerEl, this.opts.keyboardShortcuts);\n    this.containerEl.style['background-color'] = this.colors.background;\n    this.containerEl.appendChild(this.backgroundCanvas);\n    this.containerEl.appendChild(this.canvas);\n    this.isBound = true;\n    repaintAll = (function(_this) {\n      return function() {\n        _this.keepPanInImageBounds();\n        return _this.repaintAllLayers();\n      };\n    })(this);\n    util.matchElementSize(this.containerEl, [this.backgroundCanvas, this.canvas], this.backingScale, repaintAll);\n    if (this.watermarkImage) {\n      this.watermarkImage.onload = (function(_this) {\n        return function() {\n          return _this.repaintLayer('background');\n        };\n      })(this);\n    }\n    if ((ref1 = this.tool) != null) {\n      ref1.didBecomeActive(this);\n    }\n    return repaintAll();\n  };\n\n  LiterallyCanvas.prototype._teardown = function() {\n    this.tool.willBecomeInactive(this);\n    if (typeof this._unsubscribeEvents === \"function\") {\n      this._unsubscribeEvents();\n    }\n    this.tool = null;\n    this.containerEl = null;\n    return this.isBound = false;\n  };\n\n  LiterallyCanvas.prototype.trigger = function(name, data) {\n    this.canvas.dispatchEvent(new CustomEvent(name, {\n      detail: data\n    }));\n    return null;\n  };\n\n  LiterallyCanvas.prototype.on = function(name, fn) {\n    var wrapper;\n    wrapper = function(e) {\n      return fn(e.detail);\n    };\n    this.canvas.addEventListener(name, wrapper);\n    return (function(_this) {\n      return function() {\n        return _this.canvas.removeEventListener(name, wrapper);\n      };\n    })(this);\n  };\n\n  LiterallyCanvas.prototype.getRenderScale = function() {\n    return this.scale * this.backingScale;\n  };\n\n  LiterallyCanvas.prototype.clientCoordsToDrawingCoords = function(x, y) {\n    return {\n      x: (x * this.backingScale - this.position.x) / this.getRenderScale(),\n      y: (y * this.backingScale - this.position.y) / this.getRenderScale()\n    };\n  };\n\n  LiterallyCanvas.prototype.drawingCoordsToClientCoords = function(x, y) {\n    return {\n      x: x * this.getRenderScale() + this.position.x,\n      y: y * this.getRenderScale() + this.position.y\n    };\n  };\n\n  LiterallyCanvas.prototype.setImageSize = function(width, height) {\n    this.width = width || INFINITE;\n    this.height = height || INFINITE;\n    this.keepPanInImageBounds();\n    this.repaintAllLayers();\n    return this.trigger('imageSizeChange', {\n      width: this.width,\n      height: this.height\n    });\n  };\n\n  LiterallyCanvas.prototype.setTool = function(tool) {\n    var ref1;\n    if (this.isBound) {\n      if ((ref1 = this.tool) != null) {\n        ref1.willBecomeInactive(this);\n      }\n    }\n    this.tool = tool;\n    this.trigger('toolChange', {\n      tool: tool\n    });\n    if (this.isBound) {\n      return this.tool.didBecomeActive(this);\n    }\n  };\n\n  LiterallyCanvas.prototype.setShapesInProgress = function(newVal) {\n    return this._shapesInProgress = newVal;\n  };\n\n  LiterallyCanvas.prototype.pointerDown = function(x, y) {\n    var p;\n    p = this.clientCoordsToDrawingCoords(x, y);\n    if (this.tool.usesSimpleAPI) {\n      this.tool.begin(p.x, p.y, this);\n      this.isDragging = true;\n      return this.trigger(\"drawStart\", {\n        tool: this.tool\n      });\n    } else {\n      this.isDragging = true;\n      return this.trigger(\"lc-pointerdown\", {\n        tool: this.tool,\n        x: p.x,\n        y: p.y,\n        rawX: x,\n        rawY: y\n      });\n    }\n  };\n\n  LiterallyCanvas.prototype.pointerMove = function(x, y) {\n    return util.requestAnimationFrame((function(_this) {\n      return function() {\n        var p, ref1;\n        p = _this.clientCoordsToDrawingCoords(x, y);\n        if ((ref1 = _this.tool) != null ? ref1.usesSimpleAPI : void 0) {\n          if (_this.isDragging) {\n            _this.tool[\"continue\"](p.x, p.y, _this);\n            return _this.trigger(\"drawContinue\", {\n              tool: _this.tool\n            });\n          }\n        } else {\n          if (_this.isDragging) {\n            return _this.trigger(\"lc-pointerdrag\", {\n              tool: _this.tool,\n              x: p.x,\n              y: p.y,\n              rawX: x,\n              rawY: y\n            });\n          } else {\n            return _this.trigger(\"lc-pointermove\", {\n              tool: _this.tool,\n              x: p.x,\n              y: p.y,\n              rawX: x,\n              rawY: y\n            });\n          }\n        }\n      };\n    })(this));\n  };\n\n  LiterallyCanvas.prototype.pointerUp = function(x, y) {\n    var p;\n    p = this.clientCoordsToDrawingCoords(x, y);\n    if (this.tool.usesSimpleAPI) {\n      if (this.isDragging) {\n        this.tool.end(p.x, p.y, this);\n        this.isDragging = false;\n        return this.trigger(\"drawEnd\", {\n          tool: this.tool\n        });\n      }\n    } else {\n      this.isDragging = false;\n      return this.trigger(\"lc-pointerup\", {\n        tool: this.tool,\n        x: p.x,\n        y: p.y,\n        rawX: x,\n        rawY: y\n      });\n    }\n  };\n\n  LiterallyCanvas.prototype.setColor = function(name, color) {\n    this.colors[name] = color;\n    if (!this.isBound) {\n      return;\n    }\n    switch (name) {\n      case 'background':\n        this.containerEl.style.backgroundColor = this.colors.background;\n        this.repaintLayer('background');\n        break;\n      case 'primary':\n        this.repaintLayer('main');\n        break;\n      case 'secondary':\n        this.repaintLayer('main');\n    }\n    this.trigger(name + \"ColorChange\", this.colors[name]);\n    if (name === 'background') {\n      return this.trigger(\"drawingChange\");\n    }\n  };\n\n  LiterallyCanvas.prototype.getColor = function(name) {\n    return this.colors[name];\n  };\n\n  LiterallyCanvas.prototype.saveShape = function(shape, triggerShapeSaveEvent, previousShapeId) {\n    if (triggerShapeSaveEvent == null) {\n      triggerShapeSaveEvent = true;\n    }\n    if (previousShapeId == null) {\n      previousShapeId = null;\n    }\n    if (!previousShapeId) {\n      previousShapeId = this.shapes.length ? this.shapes[this.shapes.length - 1].id : null;\n    }\n    this.execute(new actions.AddShapeAction(this, shape, previousShapeId));\n    if (triggerShapeSaveEvent) {\n      this.trigger('shapeSave', {\n        shape: shape,\n        previousShapeId: previousShapeId\n      });\n    }\n    return this.trigger('drawingChange');\n  };\n\n  LiterallyCanvas.prototype.pan = function(x, y) {\n    return this.setPan(this.position.x - x, this.position.y - y);\n  };\n\n  LiterallyCanvas.prototype.keepPanInImageBounds = function() {\n    var ref1, renderScale, x, y;\n    renderScale = this.getRenderScale();\n    ref1 = this.position, x = ref1.x, y = ref1.y;\n    if (this.width !== INFINITE) {\n      if (this.canvas.width > this.width * renderScale) {\n        x = (this.canvas.width - this.width * renderScale) / 2;\n      } else {\n        x = Math.max(Math.min(0, x), this.canvas.width - this.width * renderScale);\n      }\n    }\n    if (this.height !== INFINITE) {\n      if (this.canvas.height > this.height * renderScale) {\n        y = (this.canvas.height - this.height * renderScale) / 2;\n      } else {\n        y = Math.max(Math.min(0, y), this.canvas.height - this.height * renderScale);\n      }\n    }\n    return this.position = {\n      x: x,\n      y: y\n    };\n  };\n\n  LiterallyCanvas.prototype.setPan = function(x, y) {\n    this.position = {\n      x: x,\n      y: y\n    };\n    this.keepPanInImageBounds();\n    this.repaintAllLayers();\n    return this.trigger('pan', {\n      x: this.position.x,\n      y: this.position.y\n    });\n  };\n\n  LiterallyCanvas.prototype.zoom = function(factor) {\n    var newScale;\n    newScale = this.scale + factor;\n    newScale = Math.max(newScale, this.config.zoomMin);\n    newScale = Math.min(newScale, this.config.zoomMax);\n    newScale = Math.round(newScale * 100) / 100;\n    return this.setZoom(newScale);\n  };\n\n  LiterallyCanvas.prototype.setZoom = function(scale) {\n    var oldScale;\n    oldScale = this.scale;\n    this.scale = scale;\n    this.position.x = math.scalePositionScalar(this.position.x, this.canvas.width, oldScale, this.scale);\n    this.position.y = math.scalePositionScalar(this.position.y, this.canvas.height, oldScale, this.scale);\n    this.keepPanInImageBounds();\n    this.repaintAllLayers();\n    return this.trigger('zoom', {\n      oldScale: oldScale,\n      newScale: this.scale\n    });\n  };\n\n  LiterallyCanvas.prototype.setWatermarkImage = function(newImage) {\n    this.watermarkImage = newImage;\n    util.addImageOnload(newImage, (function(_this) {\n      return function() {\n        return _this.repaintLayer('background');\n      };\n    })(this));\n    if (newImage.width) {\n      return this.repaintLayer('background');\n    }\n  };\n\n  LiterallyCanvas.prototype.repaintAllLayers = function() {\n    var i, key, len, ref1;\n    ref1 = ['background', 'main'];\n    for (i = 0, len = ref1.length; i < len; i++) {\n      key = ref1[i];\n      this.repaintLayer(key);\n    }\n    return null;\n  };\n\n  LiterallyCanvas.prototype.repaintLayer = function(repaintLayerKey, dirty) {\n    var retryCallback;\n    if (dirty == null) {\n      dirty = repaintLayerKey === 'main';\n    }\n    if (!this.isBound) {\n      return;\n    }\n    switch (repaintLayerKey) {\n      case 'background':\n        this.backgroundCtx.clearRect(0, 0, this.backgroundCanvas.width, this.backgroundCanvas.height);\n        retryCallback = (function(_this) {\n          return function() {\n            return _this.repaintLayer('background');\n          };\n        })(this);\n        if (this.watermarkImage) {\n          this._renderWatermark(this.backgroundCtx, true, retryCallback);\n        }\n        this.draw(this.backgroundShapes, this.backgroundCtx, retryCallback);\n        break;\n      case 'main':\n        retryCallback = (function(_this) {\n          return function() {\n            return _this.repaintLayer('main', true);\n          };\n        })(this);\n        if (dirty) {\n          this.buffer.width = this.canvas.width;\n          this.buffer.height = this.canvas.height;\n          this.bufferCtx.clearRect(0, 0, this.buffer.width, this.buffer.height);\n          this.draw(this.shapes, this.bufferCtx, retryCallback);\n        }\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        if (this.canvas.width > 0 && this.canvas.height > 0) {\n          this.ctx.fillStyle = '#ccc';\n          this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n          this.clipped(((function(_this) {\n            return function() {\n              _this.ctx.clearRect(0, 0, _this.canvas.width, _this.canvas.height);\n              return _this.ctx.drawImage(_this.buffer, 0, 0);\n            };\n          })(this)), this.ctx);\n          this.clipped(((function(_this) {\n            return function() {\n              return _this.transformed((function() {\n                var i, len, ref1, results, shape;\n                ref1 = _this._shapesInProgress;\n                results = [];\n                for (i = 0, len = ref1.length; i < len; i++) {\n                  shape = ref1[i];\n                  results.push(renderShapeToContext(_this.ctx, shape, {\n                    bufferCtx: _this.bufferCtx,\n                    shouldOnlyDrawLatest: true\n                  }));\n                }\n                return results;\n              }), _this.ctx, _this.bufferCtx);\n            };\n          })(this)), this.ctx, this.bufferCtx);\n        }\n    }\n    return this.trigger('repaint', {\n      layerKey: repaintLayerKey\n    });\n  };\n\n  LiterallyCanvas.prototype._renderWatermark = function(ctx, worryAboutRetina, retryCallback) {\n    if (worryAboutRetina == null) {\n      worryAboutRetina = true;\n    }\n    if (!this.watermarkImage.width) {\n      this.watermarkImage.onload = retryCallback;\n      return;\n    }\n    ctx.save();\n    ctx.translate(ctx.canvas.width / 2, ctx.canvas.height / 2);\n    ctx.scale(this.watermarkScale, this.watermarkScale);\n    if (worryAboutRetina) {\n      ctx.scale(this.backingScale, this.backingScale);\n    }\n    ctx.drawImage(this.watermarkImage, -this.watermarkImage.width / 2, -this.watermarkImage.height / 2);\n    return ctx.restore();\n  };\n\n  LiterallyCanvas.prototype.drawShapeInProgress = function(shape) {\n    this.repaintLayer('main', false);\n    return this.clipped(((function(_this) {\n      return function() {\n        return _this.transformed((function() {\n          return renderShapeToContext(_this.ctx, shape, {\n            bufferCtx: _this.bufferCtx,\n            shouldOnlyDrawLatest: true\n          });\n        }), _this.ctx, _this.bufferCtx);\n      };\n    })(this)), this.ctx, this.bufferCtx);\n  };\n\n  LiterallyCanvas.prototype.draw = function(shapes, ctx, retryCallback) {\n    var drawShapes;\n    if (!shapes.length) {\n      return;\n    }\n    drawShapes = (function(_this) {\n      return function() {\n        var i, len, results, shape;\n        results = [];\n        for (i = 0, len = shapes.length; i < len; i++) {\n          shape = shapes[i];\n          results.push(renderShapeToContext(ctx, shape, {\n            retryCallback: retryCallback\n          }));\n        }\n        return results;\n      };\n    })(this);\n    return this.clipped(((function(_this) {\n      return function() {\n        return _this.transformed(drawShapes, ctx);\n      };\n    })(this)), ctx);\n  };\n\n  LiterallyCanvas.prototype.clipped = function() {\n    var contexts, ctx, fn, height, i, j, len, len1, results, width, x, y;\n    fn = arguments[0], contexts = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    x = this.width === INFINITE ? 0 : this.position.x;\n    y = this.height === INFINITE ? 0 : this.position.y;\n    width = (function() {\n      switch (this.width) {\n        case INFINITE:\n          return this.canvas.width;\n        default:\n          return this.width * this.getRenderScale();\n      }\n    }).call(this);\n    height = (function() {\n      switch (this.height) {\n        case INFINITE:\n          return this.canvas.height;\n        default:\n          return this.height * this.getRenderScale();\n      }\n    }).call(this);\n    for (i = 0, len = contexts.length; i < len; i++) {\n      ctx = contexts[i];\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(x, y, width, height);\n      ctx.clip();\n    }\n    fn();\n    results = [];\n    for (j = 0, len1 = contexts.length; j < len1; j++) {\n      ctx = contexts[j];\n      results.push(ctx.restore());\n    }\n    return results;\n  };\n\n  LiterallyCanvas.prototype.transformed = function() {\n    var contexts, ctx, fn, i, j, len, len1, results, scale;\n    fn = arguments[0], contexts = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    for (i = 0, len = contexts.length; i < len; i++) {\n      ctx = contexts[i];\n      ctx.save();\n      ctx.translate(Math.floor(this.position.x), Math.floor(this.position.y));\n      scale = this.getRenderScale();\n      ctx.scale(scale, scale);\n    }\n    fn();\n    results = [];\n    for (j = 0, len1 = contexts.length; j < len1; j++) {\n      ctx = contexts[j];\n      results.push(ctx.restore());\n    }\n    return results;\n  };\n\n  LiterallyCanvas.prototype.clear = function(triggerClearEvent) {\n    var newShapes, oldShapes;\n    if (triggerClearEvent == null) {\n      triggerClearEvent = true;\n    }\n    oldShapes = this.shapes;\n    newShapes = [];\n    this.setShapesInProgress([]);\n    this.execute(new actions.ClearAction(this, oldShapes, newShapes));\n    this.repaintLayer('main');\n    if (triggerClearEvent) {\n      this.trigger('clear', null);\n    }\n    return this.trigger('drawingChange', {});\n  };\n\n  LiterallyCanvas.prototype.execute = function(action) {\n    this.undoStack.push(action);\n    action[\"do\"]();\n    return this.redoStack = [];\n  };\n\n  LiterallyCanvas.prototype.undo = function() {\n    var action;\n    if (!this.undoStack.length) {\n      return;\n    }\n    action = this.undoStack.pop();\n    action.undo();\n    this.redoStack.push(action);\n    this.trigger('undo', {\n      action: action\n    });\n    return this.trigger('drawingChange', {});\n  };\n\n  LiterallyCanvas.prototype.redo = function() {\n    var action;\n    if (!this.redoStack.length) {\n      return;\n    }\n    action = this.redoStack.pop();\n    this.undoStack.push(action);\n    action[\"do\"]();\n    this.trigger('redo', {\n      action: action\n    });\n    return this.trigger('drawingChange', {});\n  };\n\n  LiterallyCanvas.prototype.canUndo = function() {\n    return !!this.undoStack.length;\n  };\n\n  LiterallyCanvas.prototype.canRedo = function() {\n    return !!this.redoStack.length;\n  };\n\n  LiterallyCanvas.prototype.getPixel = function(x, y) {\n    var p, pixel;\n    p = this.drawingCoordsToClientCoords(x, y);\n    pixel = this.ctx.getImageData(p.x, p.y, 1, 1).data;\n    if (pixel[3]) {\n      return \"rgb(\" + pixel[0] + \", \" + pixel[1] + \", \" + pixel[2] + \")\";\n    } else {\n      return null;\n    }\n  };\n\n  LiterallyCanvas.prototype.getContentBounds = function() {\n    return util.getBoundingRect((this.shapes.concat(this.backgroundShapes)).map(function(s) {\n      return s.getBoundingRect();\n    }), this.width === INFINITE ? 0 : this.width, this.height === INFINITE ? 0 : this.height);\n  };\n\n  LiterallyCanvas.prototype.getDefaultImageRect = function(explicitSize, margin) {\n    var s;\n    if (explicitSize == null) {\n      explicitSize = {\n        width: 0,\n        height: 0\n      };\n    }\n    if (margin == null) {\n      margin = {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      };\n    }\n    return util.getDefaultImageRect((function() {\n      var i, len, ref1, results;\n      ref1 = this.shapes.concat(this.backgroundShapes);\n      results = [];\n      for (i = 0, len = ref1.length; i < len; i++) {\n        s = ref1[i];\n        results.push(s.getBoundingRect(this.ctx));\n      }\n      return results;\n    }).call(this), explicitSize, margin);\n  };\n\n  LiterallyCanvas.prototype.getImage = function(opts) {\n    if (opts == null) {\n      opts = {};\n    }\n    if (opts.includeWatermark == null) {\n      opts.includeWatermark = true;\n    }\n    if (opts.scaleDownRetina == null) {\n      opts.scaleDownRetina = true;\n    }\n    if (opts.scale == null) {\n      opts.scale = 1;\n    }\n    if (!opts.scaleDownRetina) {\n      opts.scale *= this.backingScale;\n    }\n    if (opts.includeWatermark) {\n      opts.watermarkImage = this.watermarkImage;\n      opts.watermarkScale = this.watermarkScale;\n      if (!opts.scaleDownRetina) {\n        opts.watermarkScale *= this.backingScale;\n      }\n    }\n    return renderSnapshotToImage(this.getSnapshot(), opts);\n  };\n\n  LiterallyCanvas.prototype.canvasForExport = function() {\n    this.repaintAllLayers();\n    return util.combineCanvases(this.backgroundCanvas, this.canvas);\n  };\n\n  LiterallyCanvas.prototype.canvasWithBackground = function(backgroundImageOrCanvas) {\n    return util.combineCanvases(backgroundImageOrCanvas, this.canvasForExport());\n  };\n\n  LiterallyCanvas.prototype.getSnapshot = function(keys) {\n    var i, k, len, ref1, shape, snapshot;\n    if (keys == null) {\n      keys = null;\n    }\n    if (keys == null) {\n      keys = ['shapes', 'imageSize', 'colors', 'position', 'scale', 'backgroundShapes'];\n    }\n    snapshot = {};\n    ref1 = ['colors', 'position', 'scale'];\n    for (i = 0, len = ref1.length; i < len; i++) {\n      k = ref1[i];\n      if (indexOf.call(keys, k) >= 0) {\n        snapshot[k] = this[k];\n      }\n    }\n    if (indexOf.call(keys, 'shapes') >= 0) {\n      snapshot.shapes = (function() {\n        var j, len1, ref2, results;\n        ref2 = this.shapes;\n        results = [];\n        for (j = 0, len1 = ref2.length; j < len1; j++) {\n          shape = ref2[j];\n          results.push(shapeToJSON(shape));\n        }\n        return results;\n      }).call(this);\n    }\n    if (indexOf.call(keys, 'backgroundShapes') >= 0) {\n      snapshot.backgroundShapes = (function() {\n        var j, len1, ref2, results;\n        ref2 = this.backgroundShapes;\n        results = [];\n        for (j = 0, len1 = ref2.length; j < len1; j++) {\n          shape = ref2[j];\n          results.push(shapeToJSON(shape));\n        }\n        return results;\n      }).call(this);\n    }\n    if (indexOf.call(keys, 'imageSize') >= 0) {\n      snapshot.imageSize = {\n        width: this.width,\n        height: this.height\n      };\n    }\n    return snapshot;\n  };\n\n  LiterallyCanvas.prototype.getSnapshotJSON = function() {\n    console.warn(\"lc.getSnapshotJSON() is deprecated. use JSON.stringify(lc.getSnapshot()) instead.\");\n    return JSON.stringify(this.getSnapshot());\n  };\n\n  LiterallyCanvas.prototype.getSVGString = function(opts) {\n    if (opts == null) {\n      opts = {};\n    }\n    return renderSnapshotToSVG(this.getSnapshot(), opts);\n  };\n\n  LiterallyCanvas.prototype.loadSnapshot = function(snapshot) {\n    var i, j, k, len, len1, ref1, ref2, s, shape, shapeRepr;\n    if (!snapshot) {\n      return;\n    }\n    if (snapshot.colors) {\n      ref1 = ['primary', 'secondary', 'background'];\n      for (i = 0, len = ref1.length; i < len; i++) {\n        k = ref1[i];\n        this.setColor(k, snapshot.colors[k]);\n      }\n    }\n    if (snapshot.shapes) {\n      this.shapes = [];\n      ref2 = snapshot.shapes;\n      for (j = 0, len1 = ref2.length; j < len1; j++) {\n        shapeRepr = ref2[j];\n        shape = JSONToShape(shapeRepr);\n        if (shape) {\n          this.execute(new actions.AddShapeAction(this, shape));\n        }\n      }\n    }\n    if (snapshot.backgroundShapes) {\n      this.backgroundShapes = (function() {\n        var l, len2, ref3, results;\n        ref3 = snapshot.backgroundShapes;\n        results = [];\n        for (l = 0, len2 = ref3.length; l < len2; l++) {\n          s = ref3[l];\n          results.push(JSONToShape(s));\n        }\n        return results;\n      })();\n    }\n    if (snapshot.imageSize) {\n      this.width = snapshot.imageSize.width;\n      this.height = snapshot.imageSize.height;\n    }\n    if (snapshot.position) {\n      this.position = snapshot.position;\n    }\n    if (snapshot.scale) {\n      this.scale = snapshot.scale;\n    }\n    this.repaintAllLayers();\n    this.trigger('snapshotLoad');\n    return this.trigger('drawingChange', {});\n  };\n\n  LiterallyCanvas.prototype.loadSnapshotJSON = function(str) {\n    console.warn(\"lc.loadSnapshotJSON() is deprecated. use lc.loadSnapshot(JSON.parse(snapshot)) instead.\");\n    return this.loadSnapshot(JSON.parse(str));\n  };\n\n  return LiterallyCanvas;\n\n})();\n"]},"metadata":{},"sourceType":"script"}