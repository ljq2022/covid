{"ast":null,"code":"var _jsxFileName = \"/Users/lebowitz/Desktop/calHackathon/covid/src/components/edit-post.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nvar CanvasJSReact = require('../canvasjs.react');\n\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nexport default class EditPost extends Component {\n  constructor(props) {\n    super(props); //ensures that the this called in the methods are the same this in the class\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChangeDiagnosis = this.onChangeDiagnosis.bind(this);\n    this.createGraphOptions = this.createGraphOptions.bind(this); //state is how you create vars in react\n\n    this.state = {\n      username: '',\n      description: '',\n      date: new Date(),\n      file: '',\n      positive: false,\n      graphData: [],\n      data: ''\n    };\n  }\n\n  createGraphOptions(jsonDataStr) {\n    var jsonData = JSON.parse(jsonDataStr);\n    var optionsTemp = {\n      animationEnabled: false,\n      title: {\n        text: \"PCR Data\"\n      },\n      axisY: {\n        title: \"sample y\",\n        includeZero: true\n      },\n      tooltip: {\n        shared: true\n      },\n      data: []\n    };\n    var storage = [];\n\n    for (var i = 0; i < jsonData.length; i++) {\n      var whichLine = 0;\n\n      for (var dataKey of Object.keys(jsonData[i])) {\n        if (i === 0) {\n          storage.push({\n            type: \"spline\",\n            name: dataKey,\n            showInLegends: true,\n            dataPoints: []\n          });\n        }\n\n        storage[whichLine].dataPoints.push({\n          x: i,\n          y: parseFloat(jsonData[i][dataKey])\n        });\n        whichLine++;\n      }\n    }\n\n    console.log(storage);\n    optionsTemp.data = storage;\n    console.log(optionsTemp);\n    return optionsTemp;\n  }\n\n  createAxes() {\n    return [{\n      primary: true,\n      type: 'linear',\n      position: 'bottom'\n    }, {\n      type: 'linear',\n      position: 'left'\n    }];\n  }\n\n  componentDidMount() {\n    console.log(this.props.match.params.id);\n    axios.get('http://localhost:5000/posts/' + this.props.match.params.id).then(response => {\n      console.log(response.data);\n      this.setState({\n        username: response.data.username,\n        description: response.data.description,\n        date: new Date(response.data.date),\n        file: response.data.file,\n        data: response.data.data\n      }, () => {\n        if (this.state.data === \"PCR\") {\n          console.log(\"is pcr yes\");\n          this.setState({\n            graphData: JSON.parse(this.state.file)\n          });\n        }\n      });\n    });\n    axios.get('http://localhost:5000/users/').then(response => {\n      if (response.data.length > 0) {\n        this.setState({\n          users: response.data.map(user => user.username)\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  onChangeDiagnosis(e) {\n    var res = false;\n\n    if (e.target.value == 'Positive') {\n      res = true;\n    }\n\n    this.setState({\n      positive: res\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const post = {\n      username: this.state.username,\n      description: this.state.description,\n      date: this.state.date,\n      file: this.state.file,\n      complete: true,\n      positive: this.state.positive\n    };\n    console.log(post);\n    axios.post('http://localhost:5000/posts/update/' + this.props.match.params.id, post).then(res => console.log(res.data));\n    window.location = '/';\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }, \"Label Image\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, this.state.username, \"'s Task\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }, \"Instructions: \", this.state.description)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }, \"Due Date: \", String(this.state.date))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }, this.state.data === \"PCR\" && typeof this.state.graphData === \"object\" ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CanvasJSChart, {\n      options: this.createGraphOptions(this.state.graphData),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }\n    })) : /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.file,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }\n    }, \"Result: \"), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.onChangeDiagnosis,\n      defaultValue: 'Negative',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      key: \"Positive\",\n      value: \"Positive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, \"Positive\"), /*#__PURE__*/React.createElement(\"option\", {\n      key: \"Negative\",\n      value: \"Negative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, \"Negative\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit Task\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/lebowitz/Desktop/calHackathon/covid/src/components/edit-post.component.js"],"names":["React","Component","axios","CanvasJSReact","require","CanvasJS","CanvasJSChart","EditPost","constructor","props","onSubmit","bind","onChangeDiagnosis","createGraphOptions","state","username","description","date","Date","file","positive","graphData","data","jsonDataStr","jsonData","JSON","parse","optionsTemp","animationEnabled","title","text","axisY","includeZero","tooltip","shared","storage","i","length","whichLine","dataKey","Object","keys","push","type","name","showInLegends","dataPoints","x","y","parseFloat","console","log","createAxes","primary","position","componentDidMount","match","params","id","get","then","response","setState","users","map","user","catch","error","e","res","target","value","preventDefault","post","complete","window","location","render","String","display","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport \"react-datepicker/dist/react-datepicker.css\";\nvar CanvasJSReact = require('../canvasjs.react');\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nexport default class EditPost extends Component {\n  constructor(props) {\n    super(props);\n    //ensures that the this called in the methods are the same this in the class\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChangeDiagnosis = this.onChangeDiagnosis.bind(this);\n    this.createGraphOptions = this.createGraphOptions.bind(this)\n    //state is how you create vars in react\n    this.state = {\n      username: '',\n      description: '',\n      date: new Date(),\n      file: '',\n      positive: false,\n      graphData: [],\n      data: ''\n    }\n  }\n  createGraphOptions(jsonDataStr){\n    var jsonData = JSON.parse(jsonDataStr)\n    var optionsTemp = {\n      animationEnabled: false,\n      title: {\n        text: \"PCR Data\"\n      },\n      axisY: {\n        title: \"sample y\",\n        includeZero: true\n      },\n      tooltip: {\n        shared: true\n      },\n      data: []\n    }\n    var storage = []\n    for (var i = 0; i < jsonData.length; i++){\n      var whichLine = 0\n      for (var dataKey of Object.keys(jsonData[i])){\n        if (i === 0){\n          storage.push({type: \"spline\", name: dataKey, showInLegends: true, dataPoints: []})\n        }\n        storage[whichLine].dataPoints.push({x: i, y: parseFloat(jsonData[i][dataKey])})\n        whichLine++\n      }\n    }\n    console.log(storage)\n    optionsTemp.data = storage\n    console.log(optionsTemp)\n    return optionsTemp\n  }\n  createAxes(){\n    return (\n      [\n        { primary: true, type: 'linear', position: 'bottom' },\n        { type: 'linear', position: 'left' }\n      ]\n    )\n  }\n  componentDidMount() {\n    console.log(this.props.match.params.id)\n    axios.get('http://localhost:5000/posts/' + this.props.match.params.id)\n      .then(response => {\n        console.log(response.data)\n        this.setState({\n          username: response.data.username,\n          description: response.data.description,\n          date: new Date(response.data.date),\n          file: response.data.file,\n          data: response.data.data\n        }, () => {\n          if (this.state.data === \"PCR\"){\n            console.log(\"is pcr yes\")\n            this.setState({ graphData: JSON.parse(this.state.file) })\n          }\n        })\n        \n      })\n    axios.get('http://localhost:5000/users/')\n      .then(response => {\n        if (response.data.length > 0) {\n          this.setState({\n            users: response.data.map(user => user.username),\n          })\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n\n  }\n  onChangeDiagnosis(e) {\n    var res = false;\n    if(e.target.value == 'Positive') {\n      res = true;\n    }\n    this.setState({\n      positive: res\n    });\n  }\n  onSubmit(e) {\n    e.preventDefault();\n\n    const post = {\n      username: this.state.username,\n      description: this.state.description,\n      date: this.state.date,\n      file: this.state.file,\n      complete: true,\n      positive: this.state.positive\n    }\n\n    console.log(post);\n\n    axios.post('http://localhost:5000/posts/update/' + this.props.match.params.id, post)\n      .then(res => console.log(res.data));\n\n    window.location = '/';\n  }\n\n  render() {\n    return (\n    <div>\n      <h3>Label Image</h3>\n      <form onSubmit={this.onSubmit}>\n        <div className=\"form-group\">\n          <label>{this.state.username}'s Task</label>\n        </div>\n        <div className=\"form-group\">\n          <p>Instructions: {this.state.description}</p>\n        </div>\n        <div className=\"form-group\">\n          <label>Due Date: {String(this.state.date)}</label>\n        </div>\n        <div style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\n          {this.state.data === \"PCR\" && typeof this.state.graphData === \"object\" ?\n            <div>\n              <CanvasJSChart options={this.createGraphOptions(this.state.graphData)}/>\n            </div>\n          :\n            <img src={this.state.file} alt=\"\"/>\n          }\n        </div>\n        <div>\n          <label>Result: </label>\n          <select onChange={this.onChangeDiagnosis} defaultValue={'Negative'}>\n            <option key='Positive' value='Positive'>Positive</option>\n            <option key='Negative' value='Negative'>Negative</option>\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <input type=\"submit\" value=\"Submit Task\" className=\"btn btn-primary\" />\n        </div>\n      </form>\n    </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}