{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lukeq\\\\blog\\\\src\\\\components\\\\edit-post.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nconst Box = props => /*#__PURE__*/React.createElement(\"tr\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }\n}, props.box.index), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }\n}, \"(\", props.box.x, \", \", props.box.y, \")\"), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }\n}, props.box.height, \" x \", props.box.width), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"a\", {\n  href: \"#\",\n  onClick: () => {\n    props.deletePost(props.box.index);\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }\n}, \"delete\")));\n\nexport default class EditPost extends Component {\n  constructor(props) {\n    super(props); //ensures that the this called in the methods are the same this in the class\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChangeDiagnosis = this.onChangeDiagnosis.bind(this);\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.draw = this.draw.bind(this);\n    this.createGraphData = this.createGraphData.bind(this);\n    this.findGraphKeys = this.findGraphKeys.bind(this);\n    this.randomColor = this.randomColor.bind(this);\n    this.deleteBox = this.deleteBox.bind(this); //state is how you create vars in react\n\n    this.state = {\n      username: '',\n      description: '',\n      date: new Date(),\n      file: '',\n      positive: false,\n      loading: true,\n      beginX: 0,\n      beginY: 0,\n      data: '',\n      lineKeys: [],\n      boxes: []\n    };\n  }\n\n  deleteBox(id) {\n    this.setState({\n      boxes: this.state.boxes.filter(el => el.index !== id)\n    });\n    const post = {\n      username: this.state.username,\n      description: this.state.description,\n      date: this.state.date,\n      file: this.state.file,\n      complete: false,\n      data: this.state.data,\n      boxes: this.state.boxes\n    };\n    axios.post('http://localhost:5000/posts/' + id, post).then(res => console.log(res.data));\n  }\n\n  createGraphData(jsonDataStr) {\n    var cleanedString = jsonDataStr.replace(/\\'/gi, '');\n    var jsonData = JSON.parse(cleanedString);\n    return jsonData;\n  }\n\n  findGraphKeys(jsonDataStr) {\n    var cleanedString = jsonDataStr.replace(/\\'/gi, '');\n    var jsonData = JSON.parse(cleanedString);\n    var lineKeysTemp = [];\n\n    for (var key of Object.keys(jsonData[0])) {\n      lineKeysTemp.push(key);\n    }\n\n    return lineKeysTemp;\n  }\n\n  randomColor() {\n    const red = Math.random() * 230;\n    const green = Math.random() * 230;\n    const blue = Math.random() * 230;\n    return \"rgb(\" + red + \",\" + green + \",\" + blue + \")\";\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/posts/' + this.props.match.params.id).then(response => {\n      this.setState({\n        username: response.data.username,\n        description: response.data.description,\n        date: new Date(response.data.date),\n        file: response.data.file,\n        data: response.data.data,\n        lineKeys: response.data.data === \"PCR\" ? this.findGraphKeys(response.data.file) : [],\n        boxes: response.data.boxes\n      });\n\n      if (response.data.data == 'Image') {\n        this.setState({\n          height: response.data.height,\n          width: response.data.width\n        });\n        console.log(response.data.boxes);\n      }\n    });\n  }\n\n  onMouseDown(e) {\n    var canvas = this.refs.canvas;\n    let rect = canvas.getBoundingClientRect();\n    let x = e.clientX - rect.left;\n    let y = e.clientY - rect.top;\n    var context = canvas.getContext('2d');\n    this.setState({\n      beginX: x,\n      beginY: y\n    });\n  }\n\n  async onMouseUp(e) {\n    var canvas = this.refs.canvas;\n    let rect = canvas.getBoundingClientRect();\n    let x = e.clientX - rect.left;\n    let y = e.clientY - rect.top;\n    var context = canvas.getContext('2d');\n    var res = [];\n\n    for (var i = 0; i < this.state.boxes.length; i++) {\n      var curr = this.state.boxes[i];\n      res.push({\n        index: i,\n        x: curr.beginX,\n        y: curr.beginY,\n        width: Math.abs(curr.beginX - x),\n        height: Math.abs(curr.beginY - y)\n      });\n    }\n\n    res.push({\n      index: this.state.boxes.length,\n      x: this.state.beginX,\n      y: this.state.beginY,\n      width: Math.abs(this.state.beginX - x),\n      height: Math.abs(this.state.beginY - y)\n    });\n    await this.setState({\n      boxes: res\n    });\n    this.draw();\n  }\n\n  onChangeDiagnosis(e) {\n    var res = false;\n\n    if (e.target.value == 'Positive') {\n      res = true;\n    }\n\n    this.setState({\n      positive: res\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    console.log(this.state.boxes);\n    const post = {\n      username: this.state.username,\n      description: this.state.description,\n      date: this.state.date,\n      file: this.state.file,\n      complete: true,\n      positive: this.state.positive,\n      boxes: this.state.boxes\n    };\n    axios.post('http://localhost:5000/posts/update/' + this.props.match.params.id, post).then(res => console.log(res.data));\n    window.location = '/';\n  }\n\n  draw() {\n    if (this.state.data == 'Image') {\n      var canvas = this.refs.canvas;\n      var context = canvas.getContext('2d');\n      var imageObj = this.refs.image;\n\n      imageObj.onload = function () {\n        context.drawImage(imageObj, 0, 0);\n      };\n\n      for (var i = 0; i < this.state.boxes.length; i++) {\n        var box = this.state.boxes[i]; // the rectangle\n\n        context.beginPath();\n        context.rect(box.x, box.y, box.width, box.height);\n        context.closePath(); // the outline\n\n        context.lineWidth = 3;\n        context.strokeStyle = 'red';\n        context.stroke();\n      }\n    }\n  }\n\n  boxList() {\n    return this.state.boxes.map(currentbox => {\n      return /*#__PURE__*/React.createElement(Box, {\n        box: currentbox,\n        deletePost: this.deleteBox,\n        key: currentbox.index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 14\n        }\n      });\n    });\n  }\n\n  boxTable() {\n    return /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }\n    }, \"Index\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    }, \"Coordinates\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }\n    }, \"Dimensions\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }\n    }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }\n    }, this.boxList()));\n  }\n\n  render() {\n    this.draw();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 7\n      }\n    }, \"Label Image\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }\n    }, this.state.username, \"'s Task\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }\n    }, \"Instructions: \", this.state.description)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    }, \"Due Date: \", String(this.state.date))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }\n    }, this.state.data === \"PCR\" ? /*#__PURE__*/React.createElement(LineChart, {\n      width: 500,\n      height: 300,\n      data: this.createGraphData(this.state.file),\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      domain: [0, 45],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 15\n      }\n    }), this.state.lineKeys.map(label => /*#__PURE__*/React.createElement(Line, {\n      key: label,\n      type: \"monotone\",\n      dataKey: label,\n      stroke: label === \"Water\" ? \"rgb(20,20,20)\" : this.randomColor(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      onMouseMove: this.draw,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"canvas\",\n      height: this.state.height,\n      width: this.state.width,\n      onMouseDown: this.onMouseDown,\n      onMouseUp: this.onMouseUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      ref: \"image\",\n      src: this.state.file,\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }\n    }, this.state.data === \"Image\" ? this.boxTable() : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 62\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }\n    }, \"Result: \"), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.onChangeDiagnosis,\n      defaultValue: 'Negative',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      key: \"Positive\",\n      value: \"Positive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 13\n      }\n    }, \"Positive\"), /*#__PURE__*/React.createElement(\"option\", {\n      key: \"Negative\",\n      value: \"Negative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 13\n      }\n    }, \"Negative\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit Task\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/lukeq/blog/src/components/edit-post.component.js"],"names":["React","Component","axios","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Box","props","box","index","x","y","height","width","deletePost","EditPost","constructor","onSubmit","bind","onChangeDiagnosis","onMouseDown","onMouseUp","draw","createGraphData","findGraphKeys","randomColor","deleteBox","state","username","description","date","Date","file","positive","loading","beginX","beginY","data","lineKeys","boxes","id","setState","filter","el","post","complete","then","res","console","log","jsonDataStr","cleanedString","replace","jsonData","JSON","parse","lineKeysTemp","key","Object","keys","push","red","Math","random","green","blue","componentDidMount","get","match","params","response","e","canvas","refs","rect","getBoundingClientRect","clientX","left","clientY","top","context","getContext","i","length","curr","abs","target","value","preventDefault","window","location","imageObj","image","onload","drawImage","beginPath","closePath","lineWidth","strokeStyle","stroke","boxList","map","currentbox","boxTable","render","String","display","justifyContent","alignItems","right","bottom","label"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\n\r\nconst Box = props => (\r\n  <tr>\r\n    <td>{props.box.index}</td>\r\n    <td>({props.box.x}, {props.box.y})</td>\r\n    <td>{props.box.height} x {props.box.width}</td>\r\n    <td>\r\n      <a href=\"#\" onClick={() => { props.deletePost(props.box.index) }}>delete</a>\r\n    </td>\r\n  </tr>\r\n)\r\n\r\nexport default class EditPost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //ensures that the this called in the methods are the same this in the class\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.onChangeDiagnosis = this.onChangeDiagnosis.bind(this);\r\n    this.onMouseDown = this.onMouseDown.bind(this);\r\n    this.onMouseUp = this.onMouseUp.bind(this);\r\n    this.draw = this.draw.bind(this);\r\n    this.createGraphData = this.createGraphData.bind(this)\r\n    this.findGraphKeys = this.findGraphKeys.bind(this)\r\n    this.randomColor = this.randomColor.bind(this)\r\n    this.deleteBox = this.deleteBox.bind(this);\r\n    //state is how you create vars in react\r\n    this.state = {\r\n      username: '',\r\n      description: '',\r\n      date: new Date(),\r\n      file: '',\r\n      positive: false,\r\n      loading: true,\r\n      beginX: 0,\r\n      beginY: 0,\r\n      data: '',\r\n      lineKeys: [],\r\n      boxes: []\r\n    }\r\n  }\r\n  deleteBox(id) {\r\n    this.setState({\r\n      boxes: this.state.boxes.filter(el => el.index !== id)\r\n    })\r\n    const post = {\r\n      username: this.state.username,\r\n      description: this.state.description,\r\n      date: this.state.date,\r\n      file: this.state.file,\r\n      complete: false,\r\n      data: this.state.data,\r\n      boxes: this.state.boxes\r\n    }\r\n    axios.post('http://localhost:5000/posts/'+id, post).then(res => console.log(res.data));\r\n  }\r\n  createGraphData(jsonDataStr){\r\n    var cleanedString = jsonDataStr.replace(/\\'/gi,'')\r\n    var jsonData = JSON.parse(cleanedString)\r\n    return jsonData\r\n  }\r\n\r\n  findGraphKeys(jsonDataStr){\r\n    var cleanedString = jsonDataStr.replace(/\\'/gi,'')\r\n    var jsonData = JSON.parse(cleanedString)\r\n    var lineKeysTemp = []\r\n    for (var key of Object.keys(jsonData[0])){\r\n      lineKeysTemp.push(key)\r\n    }\r\n    return lineKeysTemp\r\n  }\r\n\r\n  randomColor(){\r\n    const red = Math.random() * 230\r\n    const green = Math.random() * 230\r\n    const blue = Math.random() * 230\r\n    return \"rgb(\" + red + \",\" + green + \",\" + blue + \")\"\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('http://localhost:5000/posts/' + this.props.match.params.id)\r\n      .then(response => {\r\n        this.setState({\r\n          username: response.data.username,\r\n          description: response.data.description,\r\n          date: new Date(response.data.date),\r\n          file: response.data.file,\r\n          data: response.data.data,\r\n          lineKeys: response.data.data === \"PCR\" ? this.findGraphKeys(response.data.file) : [],\r\n          boxes: response.data.boxes\r\n        })\r\n        if(response.data.data == 'Image') {\r\n          this.setState({\r\n            height: response.data.height,\r\n            width: response.data.width\r\n          });\r\n          console.log(response.data.boxes);\r\n        }\r\n      })\r\n  }\r\n  onMouseDown(e) {\r\n    var canvas = this.refs.canvas;\r\n    let rect = canvas.getBoundingClientRect();\r\n    let x = e.clientX - rect.left;\r\n    let y = e.clientY - rect.top;\r\n    var context = canvas.getContext('2d');\r\n    this.setState({beginX: x, beginY: y});\r\n  }\r\n  async onMouseUp(e) {\r\n    var canvas = this.refs.canvas;\r\n    let rect = canvas.getBoundingClientRect();\r\n    let x = e.clientX - rect.left;\r\n    let y = e.clientY - rect.top;\r\n    var context = canvas.getContext('2d');\r\n\r\n    var res = [];\r\n    for(var i = 0; i < this.state.boxes.length; i++) {\r\n        var curr = this.state.boxes[i]\r\n        res.push({index: i,\r\n          x: curr.beginX,\r\n          y: curr.beginY,\r\n          width: Math.abs(curr.beginX - x),\r\n          height: Math.abs(curr.beginY - y)});\r\n    }\r\n    res.push({index: this.state.boxes.length,\r\n      x: this.state.beginX,\r\n      y: this.state.beginY,\r\n      width: Math.abs(this.state.beginX - x),\r\n      height: Math.abs(this.state.beginY - y)})\r\n    await this.setState({boxes: res});\r\n    this.draw();\r\n  };\r\n  onChangeDiagnosis(e) {\r\n    var res = false;\r\n    if(e.target.value == 'Positive') {\r\n      res = true;\r\n    }\r\n    this.setState({\r\n      positive: res\r\n    });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    console.log(this.state.boxes)\r\n    const post = {\r\n      username: this.state.username,\r\n      description: this.state.description,\r\n      date: this.state.date,\r\n      file: this.state.file,\r\n      complete: true,\r\n      positive: this.state.positive,\r\n      boxes: this.state.boxes\r\n    }\r\n    axios.post('http://localhost:5000/posts/update/' + this.props.match.params.id, post)\r\n      .then(res => console.log(res.data));\r\n\r\n    window.location = '/';\r\n  }\r\n  draw() {\r\n    if(this.state.data == 'Image') {\r\n      var canvas = this.refs.canvas;\r\n      var context = canvas.getContext('2d');\r\n      var imageObj = this.refs.image;\r\n      imageObj.onload = function() {\r\n        context.drawImage(imageObj, 0, 0);\r\n      };\r\n      for(var i = 0; i < this.state.boxes.length; i++) {\r\n        var box = this.state.boxes[i];\r\n        // the rectangle\r\n        context.beginPath();\r\n        context.rect(box.x, box.y, box.width, box.height);\r\n        context.closePath();\r\n\r\n        // the outline\r\n        context.lineWidth = 3;\r\n        context.strokeStyle = 'red';\r\n        context.stroke();\r\n      }\r\n    }\r\n  }\r\n  boxList() {\r\n    return this.state.boxes.map(currentbox => {\r\n      return <Box box={currentbox} deletePost={this.deleteBox} key={currentbox.index}/>;\r\n    })\r\n  }\r\n  boxTable() {\r\n    return (\r\n      <table className=\"table\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th>Index</th>\r\n            <th>Coordinates</th>\r\n            <th>Dimensions</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{ this.boxList() }\r\n      </tbody>\r\n    </table>\r\n    )\r\n  }\r\n  render() {\r\n    this.draw()\r\n    return (\r\n    <div>\r\n      <h3>Label Image</h3>\r\n      <form onSubmit={this.onSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>{this.state.username}'s Task</label>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <p>Instructions: {this.state.description}</p>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Due Date: {String(this.state.date)}</label>\r\n        </div>\r\n        <div style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\r\n          {this.state.data === \"PCR\" ?\r\n            <LineChart\r\n              width={500}\r\n              height={300}\r\n              data={this.createGraphData(this.state.file)}\r\n              margin={{\r\n                top: 5, right: 30, left: 20, bottom: 5,\r\n              }}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"name\" />\r\n              <YAxis domain={[0,45]}/>\r\n              <Tooltip />\r\n              <Legend />\r\n              {this.state.lineKeys.map(label =>\r\n                <Line key={label} type=\"monotone\" dataKey={label} stroke={label === \"Water\" ? \"rgb(20,20,20)\" : this.randomColor()} />\r\n              )}\r\n            </LineChart>\r\n          :\r\n            <div onMouseMove={this.draw}>\r\n              <canvas ref=\"canvas\" height={this.state.height}\r\n                width={this.state.width} onMouseDown={this.onMouseDown} onMouseUp={this.onMouseUp}\r\n              />\r\n              <img ref=\"image\" src={this.state.file} style={{display: 'none'}} />\r\n            </div>\r\n          }\r\n        </div>\r\n        <div>{this.state.data === \"Image\" ? this.boxTable(): <div />}</div>\r\n        <div>\r\n          <label>Result: </label>\r\n          <select onChange={this.onChangeDiagnosis} defaultValue={'Negative'}>\r\n            <option key='Positive' value='Positive'>Positive</option>\r\n            <option key='Negative' value='Negative'>Negative</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"submit\" value=\"Submit Task\" className=\"btn btn-primary\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}