{"ast":null,"code":"var _jsxFileName = \"/Users/lebowitz/Desktop/calHackathon/covid/src/components/create-post.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nexport default class CreatePost extends Component {\n  constructor(props) {\n    super(props); //ensures that the this called in the methods are the same this in the class\n\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onUploadFile = this.onUploadFile.bind(this);\n    this.onChangeData = this.onChangeData.bind(this); //state is how you create vars in react\n\n    this.state = {\n      username: '',\n      description: '',\n      date: new Date(),\n      users: [],\n      file: '',\n      data: 'Image'\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/users/').then(response => {\n      if (response.data.length > 0) {\n        this.setState({\n          users: response.data.map(user => user.username),\n          username: response.data[0].username\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value\n    });\n  }\n\n  onChangeData(e) {\n    this.setState({\n      data: e.target.value\n    });\n    console.log(e.target.value);\n  }\n\n  onChangeDate(date) {\n    this.setState({\n      date: date\n    });\n  }\n\n  async onUploadFile(e) {\n    const readUploadedFileAsText = inputFile => {\n      const temporaryFileReader = new FileReader();\n      return new Promise((resolve, reject) => {\n        temporaryFileReader.onerror = () => {\n          temporaryFileReader.abort();\n          reject(new DOMException(\"Problem parsing input file.\"));\n        };\n\n        temporaryFileReader.onload = () => {\n          resolve(temporaryFileReader.result);\n        };\n\n        iftemporaryFileReader.readAsDataURL(inputFile);\n      });\n    };\n\n    var binaryFile = await readUploadedFileAsText(e.target.files[0]).then(response => {\n      return response;\n    });\n    this.setState({\n      file: binaryFile\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const post = {\n      username: this.state.username,\n      description: this.state.description,\n      date: this.state.date,\n      file: this.state.file,\n      complete: false,\n      data: this.state.data\n    };\n    console.log(post);\n    axios.post('http://localhost:5000/posts/add', post).then(res => console.log(res.data));\n    window.location = '/';\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, \"Create New Post\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, \"Username: \"), /*#__PURE__*/React.createElement(\"select\", {\n      ref: \"userInput\",\n      required: true,\n      className: \"form-control\",\n      value: this.state.username,\n      onChange: this.onChangeUsername,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, this.state.users.map(function (user) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: user,\n        value: user,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 26\n        }\n      }, user);\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, \"Description: \"), /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"text\",\n      required: true,\n      className: \"form-control\",\n      value: this.state.description,\n      onChange: this.onChangeDescription,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, \"Date: \"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      selected: this.state.date,\n      onChange: this.onChangeDate,\n      minDate: new Date(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }, \"Data Type: \"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.onChangeData,\n      defaultValue: 'Image',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      key: \"Image\",\n      value: \"Image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    }, \"CT-Scan\"), /*#__PURE__*/React.createElement(\"option\", {\n      key: \"PCR\",\n      value: \"PCR\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, \"rtPCR\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, \"File: \"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      className: \"form-control-file\",\n      onChange: this.onUploadFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Create Post\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/lebowitz/Desktop/calHackathon/covid/src/components/create-post.component.js"],"names":["React","Component","axios","DatePicker","CreatePost","constructor","props","onChangeUsername","bind","onChangeDescription","onChangeDate","onSubmit","onUploadFile","onChangeData","state","username","description","date","Date","users","file","data","componentDidMount","get","then","response","length","setState","map","user","catch","error","console","log","e","target","value","readUploadedFileAsText","inputFile","temporaryFileReader","FileReader","Promise","resolve","reject","onerror","abort","DOMException","onload","result","iftemporaryFileReader","readAsDataURL","binaryFile","files","preventDefault","post","complete","res","window","location","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nexport default class CreatePost extends Component {\n  constructor(props) {\n    super(props);\n    //ensures that the this called in the methods are the same this in the class\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onUploadFile = this.onUploadFile.bind(this);\n    this.onChangeData = this.onChangeData.bind(this);\n    //state is how you create vars in react\n    this.state = {\n      username: '',\n      description: '',\n      date: new Date(),\n      users: [],\n      file: '',\n      data: 'Image'\n    }\n  }\n  componentDidMount() {\n    axios.get('http://localhost:5000/users/')\n      .then(response => {\n        if (response.data.length > 0) {\n          this.setState({\n            users: response.data.map(user => user.username),\n            username: response.data[0].username\n          })\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n\n  }\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    })\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value\n    })\n  }\n  onChangeData(e) {\n    this.setState({\n      data: e.target.value\n    });\n    console.log(e.target.value);\n  }\n  onChangeDate(date) {\n    this.setState({\n      date: date\n    })\n  }\n  async onUploadFile(e) {\n    const readUploadedFileAsText = (inputFile) => {\n      const temporaryFileReader = new FileReader();\n        return new Promise((resolve, reject) => {\n          temporaryFileReader.onerror = () => {\n            temporaryFileReader.abort();\n            reject(new DOMException(\"Problem parsing input file.\"));\n          };\n\n          temporaryFileReader.onload = () => {\n            resolve(temporaryFileReader.result);\n          };\n          iftemporaryFileReader.readAsDataURL(inputFile);\n        });\n      };\n      var binaryFile = await readUploadedFileAsText(e.target.files[0]).then((response) => {\n        return response;\n      });\n      \n      this.setState({\n        file: binaryFile\n      });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const post = {\n      username: this.state.username,\n      description: this.state.description,\n      date: this.state.date,\n      file: this.state.file,\n      complete: false,\n      data: this.state.data\n    }\n    console.log(post);\n    axios.post('http://localhost:5000/posts/add', post)\n      .then(res => console.log(res.data));\n    window.location = '/';\n  }\n\n  render() {\n    return (\n    <div>\n      <h3>Create New Post</h3>\n      <form onSubmit={this.onSubmit}>\n        <div className=\"form-group\">\n          <label>Username: </label>\n          <select ref=\"userInput\"\n              required\n              className=\"form-control\"\n              value={this.state.username}\n              onChange={this.onChangeUsername}>\n              {\n                this.state.users.map(function(user) {\n                  return <option\n                    key={user}\n                    value={user}>{user}\n                    </option>;\n                })\n              }\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label>Description: </label>\n          <textarea type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.description}\n              onChange={this.onChangeDescription}\n              />\n        </div>\n        <div className=\"form-group\">\n          <label>Date: </label>\n          <div>\n            <DatePicker\n              selected={this.state.date}\n              onChange={this.onChangeDate}\n              minDate={new Date()}\n            />\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label>Data Type: </label>\n          <div>\n            <select onChange={this.onChangeData} defaultValue={'Image'}>\n              <option key='Image' value='Image'>CT-Scan</option>\n              <option key='PCR' value='PCR'>rtPCR</option>\n            </select>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label>File: </label>\n          <div>\n            <input type=\"file\" className=\"form-control-file\" onChange={this.onUploadFile}/>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <input type=\"submit\" value=\"Create Post\" className=\"btn btn-primary\" />\n        </div>\n      </form>\n    </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}