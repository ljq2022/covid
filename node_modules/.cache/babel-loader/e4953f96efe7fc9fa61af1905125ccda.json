{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lukeq\\\\blog\\\\src\\\\components\\\\edit-post.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nexport default class EditPost extends Component {\n  constructor(props) {\n    super(props); //ensures that the this called in the methods are the same this in the class\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChangeDiagnosis = this.onChangeDiagnosis.bind(this);\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.draw = this.draw.bind(this);\n    this.createGraphData = this.createGraphData.bind(this);\n    this.findGraphKeys = this.findGraphKeys.bind(this);\n    this.randomColor = this.randomColor.bind(this); //state is how you create vars in react\n\n    this.state = {\n      username: '',\n      description: '',\n      date: new Date(),\n      file: '',\n      positive: false,\n      loading: true,\n      beginX: 0,\n      beginY: 0,\n      data: '',\n      lineKeys: [],\n      boxes: []\n    };\n  }\n\n  createGraphData(jsonDataStr) {\n    var cleanedString = jsonDataStr.replace(/\\'/gi, '');\n    var jsonData = JSON.parse(cleanedString);\n    return jsonData;\n  }\n\n  findGraphKeys(jsonDataStr) {\n    var cleanedString = jsonDataStr.replace(/\\'/gi, '');\n    var jsonData = JSON.parse(cleanedString);\n    var lineKeysTemp = [];\n\n    for (var key of Object.keys(jsonData[0])) {\n      lineKeysTemp.push(key);\n    }\n\n    return lineKeysTemp;\n  }\n\n  randomColor() {\n    const red = Math.random() * 230;\n    const green = Math.random() * 230;\n    const blue = Math.random() * 230;\n    return \"rgb(\" + red + \",\" + green + \",\" + blue + \")\";\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/posts/' + this.props.match.params.id).then(response => {\n      this.setState({\n        username: response.data.username,\n        description: response.data.description,\n        date: new Date(response.data.date),\n        file: response.data.file,\n        data: response.data.data,\n        lineKeys: response.data.data === \"PCR\" ? this.findGraphKeys(response.data.file) : []\n      });\n\n      if (response.data.data == 'Image') {\n        this.setState({\n          height: response.data.height,\n          width: response.data.width\n        });\n      }\n    });\n  }\n\n  onMouseDown(e) {\n    var canvas = this.refs.canvas;\n    let rect = canvas.getBoundingClientRect();\n    let x = e.clientX - rect.left;\n    let y = e.clientY - rect.top;\n    var context = canvas.getContext('2d');\n    this.setState({\n      beginX: x,\n      beginY: y\n    });\n  }\n\n  onMouseUp(e) {\n    var canvas = this.refs.canvas;\n    let rect = canvas.getBoundingClientRect();\n    let x = e.clientX - rect.left;\n    let y = e.clientY - rect.top;\n    var context = canvas.getContext('2d');\n    var res = [];\n\n    for (var i = 0; i < this.state.boxes.length; i++) {\n      res.push(this.state.boxes[i]);\n    }\n\n    res.push({\n      x: this.state.beginX,\n      y: this.state.beginY,\n      width: Math.abs(this.state.beginX - x),\n      height: Math.abs(this.state.beginY - y)\n    });\n    this.setState({\n      boxes: res\n    });\n    console.log(this.state.boxes);\n    this.draw();\n  }\n\n  onChangeDiagnosis(e) {\n    var res = false;\n\n    if (e.target.value == 'Positive') {\n      res = true;\n    }\n\n    this.setState({\n      positive: res\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    console.log(this.state.boxes);\n    const post = {\n      username: this.state.username,\n      description: this.state.description,\n      date: this.state.date,\n      file: this.state.file,\n      complete: true,\n      positive: this.state.positive,\n      boxes: this.state.boxes\n    };\n    axios.post('http://localhost:5000/posts/update/' + this.props.match.params.id, post).then(res => console.log(res.data));\n    window.location = '/';\n  }\n\n  draw() {\n    if (this.state.data == 'Image') {\n      var canvas = this.refs.canvas;\n      var context = canvas.getContext('2d');\n      var imageObj = this.refs.image;\n\n      imageObj.onload = function () {\n        context.drawImage(imageObj, 0, 0);\n      };\n\n      for (var i = 0; i < this.state.boxes.length; i++) {\n        var box = this.state.boxes[i]; // the rectangle\n\n        context.beginPath();\n        context.rect(box.x, box.y, box.width, box.height);\n        context.closePath(); // the outline\n\n        context.lineWidth = 3;\n        context.strokeStyle = 'red';\n        context.stroke();\n      }\n    }\n  }\n\n  render() {\n    this.draw();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }\n    }, \"Label Image\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }, this.state.username, \"'s Task\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }\n    }, \"Instructions: \", this.state.description)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }, \"Due Date: \", String(this.state.date))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }\n    }, this.state.data === \"PCR\" ? /*#__PURE__*/React.createElement(LineChart, {\n      width: 500,\n      height: 300,\n      data: this.createGraphData(this.state.file),\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      domain: [0, 45],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 15\n      }\n    }), this.state.lineKeys.map(label => /*#__PURE__*/React.createElement(Line, {\n      key: label,\n      type: \"monotone\",\n      dataKey: label,\n      stroke: label === \"Water\" ? \"rgb(20,20,20)\" : this.randomColor(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"canvas\",\n      height: this.state.height,\n      width: this.state.width,\n      onMouseDown: this.onMouseDown,\n      onMouseUp: this.onMouseUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      ref: \"image\",\n      src: this.state.file,\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }\n    }, \"Result: \"), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.onChangeDiagnosis,\n      defaultValue: 'Negative',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      key: \"Positive\",\n      value: \"Positive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }\n    }, \"Positive\"), /*#__PURE__*/React.createElement(\"option\", {\n      key: \"Negative\",\n      value: \"Negative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }\n    }, \"Negative\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit Task\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/lukeq/blog/src/components/edit-post.component.js"],"names":["React","Component","axios","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","EditPost","constructor","props","onSubmit","bind","onChangeDiagnosis","onMouseDown","onMouseUp","draw","createGraphData","findGraphKeys","randomColor","state","username","description","date","Date","file","positive","loading","beginX","beginY","data","lineKeys","boxes","jsonDataStr","cleanedString","replace","jsonData","JSON","parse","lineKeysTemp","key","Object","keys","push","red","Math","random","green","blue","componentDidMount","get","match","params","id","then","response","setState","height","width","e","canvas","refs","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","context","getContext","res","i","length","abs","console","log","target","value","preventDefault","post","complete","window","location","imageObj","image","onload","drawImage","box","beginPath","closePath","lineWidth","strokeStyle","stroke","render","String","display","justifyContent","alignItems","right","bottom","map","label"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\n\r\nexport default class EditPost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //ensures that the this called in the methods are the same this in the class\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.onChangeDiagnosis = this.onChangeDiagnosis.bind(this);\r\n    this.onMouseDown = this.onMouseDown.bind(this);\r\n    this.onMouseUp = this.onMouseUp.bind(this);\r\n    this.draw = this.draw.bind(this);\r\n    this.createGraphData = this.createGraphData.bind(this)\r\n    this.findGraphKeys = this.findGraphKeys.bind(this)\r\n    this.randomColor = this.randomColor.bind(this)\r\n    //state is how you create vars in react\r\n    this.state = {\r\n      username: '',\r\n      description: '',\r\n      date: new Date(),\r\n      file: '',\r\n      positive: false,\r\n      loading: true,\r\n      beginX: 0,\r\n      beginY: 0,\r\n      data: '',\r\n      lineKeys: [],\r\n      boxes: []\r\n    }\r\n  }\r\n\r\n  createGraphData(jsonDataStr){\r\n    var cleanedString = jsonDataStr.replace(/\\'/gi,'')\r\n    var jsonData = JSON.parse(cleanedString)\r\n    return jsonData\r\n  }\r\n\r\n  findGraphKeys(jsonDataStr){\r\n    var cleanedString = jsonDataStr.replace(/\\'/gi,'')\r\n    var jsonData = JSON.parse(cleanedString)\r\n    var lineKeysTemp = []\r\n    for (var key of Object.keys(jsonData[0])){\r\n      lineKeysTemp.push(key)\r\n    }\r\n    return lineKeysTemp\r\n  }\r\n\r\n  randomColor(){\r\n    const red = Math.random() * 230\r\n    const green = Math.random() * 230\r\n    const blue = Math.random() * 230\r\n    return \"rgb(\" + red + \",\" + green + \",\" + blue + \")\"\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('http://localhost:5000/posts/' + this.props.match.params.id)\r\n      .then(response => {\r\n        this.setState({\r\n          username: response.data.username,\r\n          description: response.data.description,\r\n          date: new Date(response.data.date),\r\n          file: response.data.file,\r\n          data: response.data.data,\r\n          lineKeys: response.data.data === \"PCR\" ? this.findGraphKeys(response.data.file) : []\r\n        })\r\n        if(response.data.data == 'Image') {\r\n          this.setState({\r\n            height: response.data.height,\r\n            width: response.data.width\r\n          });\r\n        }\r\n      })\r\n  }\r\n  onMouseDown(e) {\r\n    var canvas = this.refs.canvas;\r\n    let rect = canvas.getBoundingClientRect();\r\n    let x = e.clientX - rect.left;\r\n    let y = e.clientY - rect.top;\r\n    var context = canvas.getContext('2d');\r\n    this.setState({beginX: x, beginY: y});\r\n  }\r\n  onMouseUp(e) {\r\n    var canvas = this.refs.canvas;\r\n    let rect = canvas.getBoundingClientRect();\r\n    let x = e.clientX - rect.left;\r\n    let y = e.clientY - rect.top;\r\n    var context = canvas.getContext('2d');\r\n\r\n    var res = [];\r\n    for(var i = 0; i < this.state.boxes.length; i++) {\r\n        res.push(this.state.boxes[i]);\r\n    }\r\n    res.push({x: this.state.beginX,\r\n      y: this.state.beginY,\r\n      width: Math.abs(this.state.beginX - x),\r\n      height: Math.abs(this.state.beginY - y)})\r\n    this.setState({boxes: res});\r\n    console.log(this.state.boxes);\r\n    this.draw();\r\n  };\r\n  onChangeDiagnosis(e) {\r\n    var res = false;\r\n    if(e.target.value == 'Positive') {\r\n      res = true;\r\n    }\r\n    this.setState({\r\n      positive: res\r\n    });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    console.log(this.state.boxes)\r\n    const post = {\r\n      username: this.state.username,\r\n      description: this.state.description,\r\n      date: this.state.date,\r\n      file: this.state.file,\r\n      complete: true,\r\n      positive: this.state.positive,\r\n      boxes: this.state.boxes\r\n    }\r\n\r\n    axios.post('http://localhost:5000/posts/update/' + this.props.match.params.id, post)\r\n      .then(res => console.log(res.data));\r\n\r\n    window.location = '/';\r\n  }\r\n  draw() {\r\n    if(this.state.data == 'Image') {\r\n      var canvas = this.refs.canvas;\r\n      var context = canvas.getContext('2d');\r\n      var imageObj = this.refs.image;\r\n      imageObj.onload = function() {\r\n        context.drawImage(imageObj, 0, 0);\r\n      };\r\n      for(var i = 0; i < this.state.boxes.length; i++) {\r\n        var box = this.state.boxes[i];\r\n        // the rectangle\r\n        context.beginPath();\r\n        context.rect(box.x, box.y, box.width, box.height);\r\n        context.closePath();\r\n\r\n        // the outline\r\n        context.lineWidth = 3;\r\n        context.strokeStyle = 'red';\r\n        context.stroke();\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    this.draw()\r\n    return (\r\n    <div>\r\n      <h3>Label Image</h3>\r\n      <form onSubmit={this.onSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>{this.state.username}'s Task</label>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <p>Instructions: {this.state.description}</p>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Due Date: {String(this.state.date)}</label>\r\n        </div>\r\n        <div style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\r\n          {this.state.data === \"PCR\" ?\r\n            <LineChart\r\n              width={500}\r\n              height={300}\r\n              data={this.createGraphData(this.state.file)}\r\n              margin={{\r\n                top: 5, right: 30, left: 20, bottom: 5,\r\n              }}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"name\" />\r\n              <YAxis domain={[0,45]}/>\r\n              <Tooltip />\r\n              <Legend />\r\n              {this.state.lineKeys.map(label =>\r\n                <Line key={label} type=\"monotone\" dataKey={label} stroke={label === \"Water\" ? \"rgb(20,20,20)\" : this.randomColor()} />\r\n              )}\r\n            </LineChart>\r\n          :\r\n            <div>\r\n              <canvas ref=\"canvas\" height={this.state.height}\r\n                width={this.state.width} onMouseDown={this.onMouseDown} onMouseUp={this.onMouseUp}\r\n              />\r\n              <img ref=\"image\" src={this.state.file} style={{display: 'none'}} />\r\n            </div>\r\n          }\r\n        </div>\r\n        <div>\r\n          <label>Result: </label>\r\n          <select onChange={this.onChangeDiagnosis} defaultValue={'Negative'}>\r\n            <option key='Positive' value='Positive'>Positive</option>\r\n            <option key='Negative' value='Negative'>Negative</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"submit\" value=\"Submit Task\" className=\"btn btn-primary\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}