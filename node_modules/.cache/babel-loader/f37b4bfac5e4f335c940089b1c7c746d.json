{"ast":null,"code":"var Ellipse,\n    ToolWithStroke,\n    createShape,\n    extend = function (child, parent) {\n  for (var key in parent) {\n    if (hasProp.call(parent, key)) child[key] = parent[key];\n  }\n\n  function ctor() {\n    this.constructor = child;\n  }\n\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n  child.__super__ = parent.prototype;\n  return child;\n},\n    hasProp = {}.hasOwnProperty;\n\nToolWithStroke = require('./base').ToolWithStroke;\ncreateShape = require('../core/shapes').createShape;\n\nmodule.exports = Ellipse = function (superClass) {\n  extend(Ellipse, superClass);\n\n  function Ellipse() {\n    return Ellipse.__super__.constructor.apply(this, arguments);\n  }\n\n  Ellipse.prototype.name = 'Ellipse';\n  Ellipse.prototype.iconName = 'ellipse';\n\n  Ellipse.prototype.begin = function (x, y, lc) {\n    return this.currentShape = createShape('Ellipse', {\n      x: x,\n      y: y,\n      strokeWidth: this.strokeWidth,\n      strokeColor: lc.getColor('primary'),\n      fillColor: lc.getColor('secondary')\n    });\n  };\n\n  Ellipse.prototype[\"continue\"] = function (x, y, lc) {\n    this.currentShape.width = x - this.currentShape.x;\n    this.currentShape.height = y - this.currentShape.y;\n    return lc.drawShapeInProgress(this.currentShape);\n  };\n\n  Ellipse.prototype.end = function (x, y, lc) {\n    return lc.saveShape(this.currentShape);\n  };\n\n  return Ellipse;\n}(ToolWithStroke);","map":{"version":3,"sources":["C:/Users/lukeq/blog/node_modules/literallycanvas/lib/js/tools/Ellipse.js"],"names":["Ellipse","ToolWithStroke","createShape","extend","child","parent","key","hasProp","call","ctor","constructor","prototype","__super__","hasOwnProperty","require","module","exports","superClass","apply","arguments","name","iconName","begin","x","y","lc","currentShape","strokeWidth","strokeColor","getColor","fillColor","width","height","drawShapeInProgress","end","saveShape"],"mappings":"AAAA,IAAIA,OAAJ;AAAA,IAAaC,cAAb;AAAA,IAA6BC,WAA7B;AAAA,IACEC,MAAM,GAAG,UAASC,KAAT,EAAgBC,MAAhB,EAAwB;AAAE,OAAK,IAAIC,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,QAAIE,OAAO,CAACC,IAAR,CAAaH,MAAb,EAAqBC,GAArB,CAAJ,EAA+BF,KAAK,CAACE,GAAD,CAAL,GAAaD,MAAM,CAACC,GAAD,CAAnB;AAA2B;;AAAC,WAASG,IAAT,GAAgB;AAAE,SAAKC,WAAL,GAAmBN,KAAnB;AAA2B;;AAACK,EAAAA,IAAI,CAACE,SAAL,GAAiBN,MAAM,CAACM,SAAxB;AAAmCP,EAAAA,KAAK,CAACO,SAAN,GAAkB,IAAIF,IAAJ,EAAlB;AAA8BL,EAAAA,KAAK,CAACQ,SAAN,GAAkBP,MAAM,CAACM,SAAzB;AAAoC,SAAOP,KAAP;AAAe,CAD5R;AAAA,IAEEG,OAAO,GAAG,GAAGM,cAFf;;AAIAZ,cAAc,GAAGa,OAAO,CAAC,QAAD,CAAP,CAAkBb,cAAnC;AAEAC,WAAW,GAAGY,OAAO,CAAC,gBAAD,CAAP,CAA0BZ,WAAxC;;AAEAa,MAAM,CAACC,OAAP,GAAiBhB,OAAO,GAAI,UAASiB,UAAT,EAAqB;AAC/Cd,EAAAA,MAAM,CAACH,OAAD,EAAUiB,UAAV,CAAN;;AAEA,WAASjB,OAAT,GAAmB;AACjB,WAAOA,OAAO,CAACY,SAAR,CAAkBF,WAAlB,CAA8BQ,KAA9B,CAAoC,IAApC,EAA0CC,SAA1C,CAAP;AACD;;AAEDnB,EAAAA,OAAO,CAACW,SAAR,CAAkBS,IAAlB,GAAyB,SAAzB;AAEApB,EAAAA,OAAO,CAACW,SAAR,CAAkBU,QAAlB,GAA6B,SAA7B;;AAEArB,EAAAA,OAAO,CAACW,SAAR,CAAkBW,KAAlB,GAA0B,UAASC,CAAT,EAAYC,CAAZ,EAAeC,EAAf,EAAmB;AAC3C,WAAO,KAAKC,YAAL,GAAoBxB,WAAW,CAAC,SAAD,EAAY;AAChDqB,MAAAA,CAAC,EAAEA,CAD6C;AAEhDC,MAAAA,CAAC,EAAEA,CAF6C;AAGhDG,MAAAA,WAAW,EAAE,KAAKA,WAH8B;AAIhDC,MAAAA,WAAW,EAAEH,EAAE,CAACI,QAAH,CAAY,SAAZ,CAJmC;AAKhDC,MAAAA,SAAS,EAAEL,EAAE,CAACI,QAAH,CAAY,WAAZ;AALqC,KAAZ,CAAtC;AAOD,GARD;;AAUA7B,EAAAA,OAAO,CAACW,SAAR,CAAkB,UAAlB,IAAgC,UAASY,CAAT,EAAYC,CAAZ,EAAeC,EAAf,EAAmB;AACjD,SAAKC,YAAL,CAAkBK,KAAlB,GAA0BR,CAAC,GAAG,KAAKG,YAAL,CAAkBH,CAAhD;AACA,SAAKG,YAAL,CAAkBM,MAAlB,GAA2BR,CAAC,GAAG,KAAKE,YAAL,CAAkBF,CAAjD;AACA,WAAOC,EAAE,CAACQ,mBAAH,CAAuB,KAAKP,YAA5B,CAAP;AACD,GAJD;;AAMA1B,EAAAA,OAAO,CAACW,SAAR,CAAkBuB,GAAlB,GAAwB,UAASX,CAAT,EAAYC,CAAZ,EAAeC,EAAf,EAAmB;AACzC,WAAOA,EAAE,CAACU,SAAH,CAAa,KAAKT,YAAlB,CAAP;AACD,GAFD;;AAIA,SAAO1B,OAAP;AAED,CAjC0B,CAiCxBC,cAjCwB,CAA3B","sourcesContent":["var Ellipse, ToolWithStroke, createShape,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nToolWithStroke = require('./base').ToolWithStroke;\n\ncreateShape = require('../core/shapes').createShape;\n\nmodule.exports = Ellipse = (function(superClass) {\n  extend(Ellipse, superClass);\n\n  function Ellipse() {\n    return Ellipse.__super__.constructor.apply(this, arguments);\n  }\n\n  Ellipse.prototype.name = 'Ellipse';\n\n  Ellipse.prototype.iconName = 'ellipse';\n\n  Ellipse.prototype.begin = function(x, y, lc) {\n    return this.currentShape = createShape('Ellipse', {\n      x: x,\n      y: y,\n      strokeWidth: this.strokeWidth,\n      strokeColor: lc.getColor('primary'),\n      fillColor: lc.getColor('secondary')\n    });\n  };\n\n  Ellipse.prototype[\"continue\"] = function(x, y, lc) {\n    this.currentShape.width = x - this.currentShape.x;\n    this.currentShape.height = y - this.currentShape.y;\n    return lc.drawShapeInProgress(this.currentShape);\n  };\n\n  Ellipse.prototype.end = function(x, y, lc) {\n    return lc.saveShape(this.currentShape);\n  };\n\n  return Ellipse;\n\n})(ToolWithStroke);\n"]},"metadata":{},"sourceType":"script"}